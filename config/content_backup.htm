<h1>HW1</h1>
<p>作業1:個人分配範圍</p>
<p><span>PCH 10:Networking Hardware</span></p>
<p>PCH 11:<span>Networking Media</span></p>
<p><span></span></p>
<p><img alt="圖片" height="465" src="https://pbs.twimg.com/media/EZiQ5PrUwAAKY3P?format=jpg&amp;name=4096x4096" width="698"/></p>
<p><span></span></p>
<h2>PCH10</h2>
<p><span>PCH 10: 網路硬體(Networking Hardware)</span></p>
<p><img src="https://oli.cmu.edu/repository/webcontent/d826575d0a0001dc3e9f244fa018c560/PCH10/webcontent/PCH10/image1.jpeg"/></p>
<div class="section" id="N10687">
<div class="sectionContain">
<p lang=""></p>
<p lang=""></p>
<br/><span><strong>網絡設備</strong>  </span>Network Devices</div>
<div class="sectionContain"></div>
<div class="sectionContain">-------------------------------------------------------------------------------------------------------</div>
<div class="sectionContain">
<p lang="">總覽  Overview</p>
<p id="N1068E" lang="">Network devices vary according to their purpose. In this module, we will discuss various devices, such as hubs, switches, routers, bridges, network adapters, and media. As we discuss the devices, you should pay attention to their uses, their benefits, and their limitations. We will also explore how to install a network adapter.</p>
<p lang="">網絡設備根據其用途而有所不同。在本模塊中，我們將討論各種設備，例如集線器，交換機，路由器，網橋，網絡適配器和媒體。在討論設備時，您應注意其用途，優點和局限性。我們還將探討如何安裝網絡適配器。</p>
<p lang="">-------------------------------------------------------------------------------------------------------</p>
<p lang="">集線器  Hub</p>
</div>
</div>
<div class="section" id="N10693">
<div class="sectionContain">
<p id="N1069A" lang="">Hubs are among the most simplistic networking devices and are used to connect multiple network devices and workstations to each other, thereby forming a network. Hubs are also known as multiport repeaters. A hub works by accepting a signal in one port and rebroadcasting that same signal out to all of its other ports. Standard hubs do not have any “intelligence” (ability to change in response to varying situations or requirements), so we often refer to them as “dumb hubs.” Hubs can be classified as either active or passive. An active hub repeats the signal it receives on all of its ports and amplifies that signal to full strength. Passive hubs only repeat the signal without adding any amplification. Hubs are an older technology that can be used to easily increase the number of ports available, but this can lead to excessive network errors and collisions. There are newer variants of hubs called smart hubs. Smart hubs are essentially active hubs with enhanced feature sets, such as the use of simple network management protocol (SNMP).</p>
<p id="N1069D" lang="">Three basic types of Ethernet hubs are as follows:</p>
<ul lang="">
<li lang="">Passive hub – repeats signal with no amplification</li>
<li lang="">Active hub – repeats signal with amplification</li>
<li lang="">Smart hub – active hub with enhanced features (ex: SNMP)</li>
</ul>
<p id="N106AC" lang="">Hubs have no inherent security designed within them because they simply rebroadcast all the information received from one port to every other port. Essentially, hubs rely on the connected workstations to only “listen” to the information on their port if that information is specifically addressed to that workstation. When the information is not addressed to it, the workstation is supposed to simply ignore the data. But a network card can be placed into “promiscuous” mode, where it will listen to all traffic, regardless of which workstation that traffic is addressed to. This makes hubs very insecure.</p>
<p id="N106AF" lang="">Another drawback of hubs is that they have to share bandwidth, as all devices operate in one collision domain. Therefore, if you have a 100 Mbps hub, but connect four devices to that hub, your devices will effectively be operating at 25 Mbps each. This can lead to huge slowdowns in your network traffic when using a 16-, 24-, or 48-port hub.</p>
<p id="N1069A" lang=""><span><span>集線器是最簡單的網絡設備之一，用於將多個網絡設備和工作站相互連接，從而形成一個網絡。</span><span>集線器也稱為多端口中繼器。</span><span>集線器通過在一個端口中接收信號並將該信號重新廣播到其所有其他端口來工作。</span><span>標準集線器沒有任何“智能”（能夠根據不同情況或要求進行更改的能力），因此我們通常將它們稱為“啞集線器”。</span><span>集線器可以分為主動或被動兩種。</span><span>活動集線器會在其所有端口上重複接收到的信號，並將該信號放大到最大強度。</span><span>無源集線器僅重複信號而不增加任何放大。</span><span>集線器是一種較舊的技術，可用於輕鬆增加可用端口的數量，</span><span>但這會導致過多的網絡錯誤和衝突。</span><span>集線器有較新的變體，稱為智能集線器。</span><span>智能集線器實質上是具有增強功能集（例如，使用簡單網絡管理協議（SNMP））的活動集線器。</span></span></p>
<p id="N1069D" lang=""><span><span>以太網集線器的三種基本類型如下：</span></span></p>
<ul lang="">
<li lang=""><span><span>無源集線器–重複信號而不放大</span></span></li>
<li lang=""><span><span>有源集線器–重複放大信號</span></span></li>
<li lang=""><span><span>智能集線器–具有增強功能的活動集線器（例如：SNMP）</span></span></li>
</ul>
<p id="N106AC" lang=""><span><span>集線器內部沒有設計固有的安全性，因為它們只是將從一個端口接收的所有信息重新廣播到另一個端口。</span><span>本質上，集線器僅依賴於連接的工作站來“偵聽”其端口上的信息（如果該信息專門針對該工作站）。</span><span>當信息沒有發送給它時，工作站應該只是忽略數據。</span><span>但是，可以將網卡置於“混雜”模式，在該模式下，網卡將偵聽所有流量，而不管該流量指向哪個工作站。</span><span>這使集線器非常不安全。</span></span></p>
<p id="N106AF" lang=""><span><span>集線器的另一個缺點是它們必須共享帶寬，因為所有設備都在一個衝突域中運行。</span><span>因此，如果您有一個100 Mbps的集線器，但將四個設備連接到該集線器，則每個設備將有效地以25 Mbps的速度運行。</span><span>使用16端口，24端口或48端口集線器時，這可能會導致網絡流量大幅下降。</span></span></p>
<p lang=""><span><span></span></span>-------------------------------------------------------------------------------------------------------</p>
<p lang=""><span><span>網橋  Bridges</span></span></p>
<p lang=""><span><span>Because hubs operate with all devices acting in a single collision domain, a network device that could break up that collision domain into smaller units is required to help the network operate more efficiently. For example, if a hub is connected to another hub, they both operate under a single <a aria-describedby="N106CD" class="extra" id=""></a>collision domain<span><span> </span>. A bridge is used to connect two hubs together, but still keep the hubs’ collision domains separate. This interconnection of multiple network segments together allows networks to scale into large networks without significantly decreasing the performance of that network. Bridges are smarter than hubs; in fact, they actually analyze the source<span> </span></span><a aria-describedby="N106D6" class="extra" id=""></a>media access control (MAC) addresses<span><span> </span>in the frames entering the bridge and populate an internal MAC table based on those addresses. Future routing decisions are based upon those destination MAC addresses. This intelligent forwarding based on the destination MAC address in the frame allows for a decrease in network traffic by only forwarding information to the root hub associated with the network device. Network switches, which we will discuss, are the evolution of hubs and bridges.</span></span></span></p>
</div>
</div>
<div class="section" id="N106C2">
<div class="sectionContain">
<p id="N106C9" lang=""><span><span>因為集線器與所有在單個衝突域中起作用的設備一起運行，所以需要一個可以將該衝突域分解為較小單元的網絡設備，以幫助網絡更高效地運行。</span><span>例如，如果一個集線器連接到另一個集線器，則它們都在單個</span></span><a aria-describedby="N106CD" class="extra" id=""></a><span><span>衝突域</span></span><span><span>下運行<span> </span></span><span>。</span><span>橋用於將兩個集線器連接在一起，但仍將集線器的衝突域分開。</span><span>多個網段的這種互連在一起使網絡可以擴展為大型網絡，而不會顯著降低該網絡的性能。</span><span>橋比集線器更智能；</span><span>實際上，他們實際上是在分析源<span> </span></span></span><a aria-describedby="N106D6" class="extra" id=""></a><span><span>媒體訪問控制（MAC）地址</span></span><span><span>在進入網橋的幀中，並根據這些地址填充內部MAC表。</span><span>未來的路由決策將基於那些目標MAC地址。</span><span>通過僅將信息轉發到與網絡設備關聯的根集線器，這種基於幀中目標MAC地址的智能轉發可減少網絡流量。</span><span>我們將討論的網絡交換機是集線器和網橋的演進。</span></span></p>
<p lang=""><span><span></span></span>-------------------------------------------------------------------------------------------------------</p>
<p lang=""><span><span>交換機  Switches</span></span></p>
<p id="N106E8" lang="">Switches are used to connect multiple network segments together, whether they connect from switch to switch, or switch to workstation. Each port on a switch acts as its own collision domain. A switch is an evolution from a hub and bridge. Essentially, each port on a switch operates as if it were a hub with a bridge connecting the ports of the hub to the workstation, thereby reducing the chance of a collision on the network to zero.</p>
<p id="N106EB" lang="">Switches are intelligent devices that make forwarding decisions based upon the MAC addresses they learn and place in their MAC tables. A switch analyzes the source MAC addresses in frames as they enter the switch, and then populates the switch’s internal MAC table with the addresses to match them with the switch ports. This allows the switch to forward the frame only to the correct device on a single switch port, thereby increasing security and network speed.</p>
<p id="N106EE" lang="">If a switch receives a frame but does not have the destination MAC address in its forwarding table, it will flood the frame to all ports except the source to solicit the location of the destination MAC address. Switches break up collision domains but create<span> </span><a aria-describedby="N106F2" class="extra" id=""></a>broadcast domains<span> </span>.</p>
<p id="N106FA" lang="">Security is increased because only the device to which the information is addressed can receive a copy, regardless of whether the card is in “promiscuous” mode. This is similar in operation to an old-fashioned telephone operator switchboard. If the information isn’t addressed to your port, your port won’t receive the information. Also, because each port is in its own collision domain, the network speed is increased. Regardless of how many devices are on the network, each switch port has full-speed operations, so for a 100 Mbps switch, each device operates at 100 Mbps.</p>
</div>
</div>
<div class="section" id="switches">
<div class="sectionContain" style="text-align: center;">
<p id="N106E8" lang="" style="text-align: left;"><span><span>交換機用於將多個網段連接在一起，無論它們是從交換機到交換機還是從工作站到工作站。</span><span>交換機上的每個端口都充當其自己的衝突域。</span><span>交換機是集線器和網橋的演進。</span><span>本質上，交換機上的每個端口都好像是集線器一樣工作，並具有將集線器的端口連接到工作站的網橋，從而將網絡衝突的可能性降低到零。</span></span></p>
<p id="N106EB" lang="" style="text-align: left;"><span><span>交換機是智能設備，它們根據其學習到的MAC地址並放置在其MAC表中來做出轉發決策。</span><span>交換機在輸入源MAC地址時會對其進行分析，然後以幀的形式填充源IP地址，以使其與交換機端口匹配。</span><span>這允許交換機僅將幀轉發到單個交換機端口上的正確設備，從而提高安全性和網絡速度。</span></span></p>
<p id="N106EE" lang="" style="text-align: left;"><span><span>如果交換機接收到幀，但在其轉發表中沒有目標MAC地址，則它將將該幀泛洪到除源之外的所有端口上，以請求目標MAC地址的位置。</span><span>交換器分解衝突域，但創建<span> </span></span></span><a aria-describedby="N106F2" class="extra" id=""></a><span><span>廣播域</span></span><span><span>。</span></span></p>
<p id="N106FA" lang="" style="text-align: left;"><span><span>安全性提高了，因為無論信息卡是否處於“混雜”模式，只有信息所針對的設備才能收到副本。</span><span>這在操作上類似於老式的電話接線員總機。</span><span>如果該信息未發送到您的端口，則您的端口將不會收到該信息。</span><span>另外，由於每個端口都在其自己的衝突域中，因此網絡速度得以提高。</span><span>無論網絡上有多少設備，每個交換機端口都可以全速運行，因此對於100 Mbps交換機，每個設備都以100 Mbps的速度運行。</span></span></p>
<span class="imagewrap"><span class="imagewrap"><span class="image"><img class="popimg" id="_i_2" onclick="loadImageFromPage(this);" src="https://oli.cmu.edu/repository/webcontent/d826575d0a0001dc3e9f244fa018c560/PCH10/webcontent/PCH10/image2.png"/></span><span class="caption" lang=""></span></span></span>
<p id="N10702" lang=""><span><span>與交換機的網絡圖。</span></span></p>
<p lang="" style="text-align: left;"><span><span></span></span>-------------------------------------------------------------------------------------------------------</p>
<p lang="" style="text-align: left;"><span><span>路由器  Routers</span></span></p>
<p lang="" style="text-align: left;"><span><span>Routers move data packets (layer 3), as opposed to switches (layer 2), which move frames. Routers separate network segments based on IP addressing and will only forward packets out of the segment when configured to do so. This design breaks up broadcast domains created by switches. It is up to the network professional to configure the router to connect different networks together and perform intelligent routing decisions. A router is most closely associated with a computer in that it has a processor and a sophisticated OS. The router compares the IP address of the source and destination of the packet and forwards traffic to/from a network based on this logical address (IPv4 and IPv6 addresses, for example). Routers are typically feature-rich devices and support a wide range of interface types, including unshielded twisted pair, fiber optic, and coaxial cable connections. Like a switch, each port on a router is a separate collision domain. Using access control lists, routers have the ability to block access to networks based on ports or addresses. This blocking adds to the network’s security.</span></span></p>
</div>
</div>
<div class="section" id="N1070D">
<div class="sectionContain" style="text-align: center;">
<p id="N10714" lang="" style="text-align: left;"><span><span>路由器移動數據包（第3層），而交換機移動第2層（幀）。</span><span>路由器根據IP地址將網段分開，並且僅在配置  時將數據包轉發出網段。</span><span>這種設計可以分解由交換機創建的廣播域。</span><span>由網絡專業人員決定將路由器配置為將不同的網絡連接在一起並執行智能路由決策。</span><span>路由器與計算機的關係最為密切，因為它具有處理器和完善的操作系統。</span><span>路由器比較數據包源和目標的IP地址，並基於此邏輯地址（例如，IPv4和IPv6地址）將流量轉發到網絡或從網絡轉發流量。</span><span>路由器通常是功能豐富的設備，並且支持多種接口類型，</span><span>包括非屏蔽雙絞線，光纖和同軸電纜連接。</span><span>像交換機一樣，路由器上的每個端口都是一個單獨的衝突域。</span><span>使用訪問控制列表，路由器可以根據端口或地址阻止對網絡的訪問。</span><span>這種阻塞增加了網絡的安全性。</span></span></p>
<span class="imagewrap"><span class="imagewrap"><span class="image"><img class="popimg" id="_i_4" onclick="loadImageFromPage(this);" src="https://oli.cmu.edu/repository/webcontent/d826575d0a0001dc3e9f244fa018c560/PCH10/webcontent/PCH10/image3.png"/></span><span class="caption" lang=""></span></span></span>
<p id="N1071C" lang="" style="text-align: center;"><span><span>與路由器的網絡圖。</span></span></p>
<p lang="" style="text-align: left;"><span><span></span></span>-------------------------------------------------------------------------------------------------------</p>
<p lang="" style="text-align: left;"><span><span>網路適配器  N</span></span><span><span>etwork Adapter</span></span></p>
<div class="section" id="network_adapter">
<div class="sectionContain">
<p id="N1072F" lang="" style="text-align: left;">The network adapter is used to connect a workstation to the network through the use of media. The network adapter can be built in to the motherboard of the device in several ways:</p>
<ul lang="" style="text-align: left;">
<li lang="">Using an integrated port cluster.</li>
<li lang="">Added to a workstation through the use of an internal expansion card (PCIe, PCI, or mini-PCIe).</li>
<li lang="">Through the use of an externally connected card, such as USB or PCMCIA.</li>
</ul>
<p id="N1073E" lang="" style="text-align: left;">There are two main types of network adapters: wired and wireless. The wired cards support various cable types, such as unshielded twisted pair (UTP), fiber optic, and coaxial cabling. These various cable types are called media.</p>
</div>
</div>
</div>
</div>
<div class="section" id="network_adapter">
<div class="sectionContain">
<p id="N1072F" lang=""><span><span>網絡適配器用於通過使用媒體將工作站連接到網絡。</span><span>可以通過幾種方式將網絡適配器內置到設備的主板中：</span></span></p>
<ul lang="">
<li lang=""><span><span>使用集成端口集群。</span></span></li>
<li lang=""><span><span>通過使用內部擴展卡（PCIe，PCI或mini-PCIe）添加到工作站。</span></span></li>
<li lang=""><span><span>通過使用外部連接的卡，例如USB或PCMCIA。</span></span></li>
</ul>
<p id="N1073E" lang=""><span><span>網絡適配器有兩種主要類型：有線和無線。</span><span>有線卡支持各種電纜類型，例如非屏蔽雙絞線（UTP），光纖和同軸電纜。</span><span>這些各種電纜類型稱為媒體。</span></span></p>
<p lang=""><span><span></span></span>-------------------------------------------------------------------------------------------------------</p>
<p lang=""><span><span>媒體  Media</span></span></p>
<p lang="" style="text-align: left;"><span><span>Media is the term used to categorize the physical connection between two device ports, such as between a computer and a switch. Media is made up of copper cable, fiber-optic cable, or even radio frequency waves (as used in Wi-Fi networks). Media varies greatly in cost, from free for radio waves, to cheap for unshielded twisted pair (copper cable), to expensive for fiber-optic cabling. The type of media determines the bandwidth speed, capacity, and distance limitations for a particular network. We will discuss media in more depth in a future module.</span></span></p>
</div>
</div>
<div class="section" id="media">
<div class="sectionContain" style="text-align: center;">
<p id="N1074B" lang="" style="text-align: left;"><span><span>媒體是用於對兩個設備端口之間（例如計算機和交換機之間）的物理連接進行分類的術語。</span><span>介質由銅纜，光纜或什至是射頻波（用於Wi-Fi網絡）組成。</span><span>介質的成本差異很大，從無線電波的免費成本到非屏蔽雙絞線（銅纜）的價格便宜，再到光纖電纜的價格昂貴。</span><span>媒體的類型確定特定網絡的帶寬速度，容量和距離限制。</span><span>我們將在以後的模塊中更深入地討論媒體。</span></span></p>
<span class="imagewrap"><span class="imagewrap"><span class="image"><img class="popimg" id="_i_6" onclick="loadImageFromPage(this);" src="https://oli.cmu.edu/repository/webcontent/d826575d0a0001dc3e9f244fa018c560/PCH10/webcontent/PCH10/image4.png"/></span><span class="caption" lang=""></span></span></span>
<p id="N10753" lang="" style="text-align: center;"><span><span>與指向連接媒體的箭頭的網絡圖。</span></span></p>
<p lang="" style="text-align: center;"><span><span></span></span></p>
<p lang="" style="text-align: center;"><span><span></span></span></p>
<p lang="" style="text-align: left;">-------------------------------------------------------------------------------------------------------</p>
<p style="text-align: left;"><span><strong>安裝網絡適配器</strong>  </span>Install a Network Adapter</p>
<p style="text-align: left;"><span>There are times when you may need to install an add-on network interface card (NIC). Current desktop motherboards should have a built-in NIC on the rear input/output (I/O) panel. Installing an add-on card can keep a machine in service if the built-in NIC is defective or if you need to upgrade to match the current local area network (LAN) specifications (i.e., from a 10/100 BaseT to 10/100/1000 or 10GBaseT).  </span></p>
<p style="text-align: left;"><span><span>有時您可能需要安裝附加網絡接口卡（NIC）。</span><span>當前的台式機主板的後方輸入/輸出（I / O）面板上應具有內置的NIC。</span><span>如果內置NIC出現故障，或者需要升級以匹配當前的局域網（LAN）規格（即從10/100 <span style="color: #ff0000;">BaseT</span>到10/100），則安裝附加卡可以使機器保持運行狀態。 / 1000或10G<span style="background-color: #ffffff; color: #ff0000;">BaseT</span>）。</span></span></p>
<p style="text-align: left;"><span><span></span></span></p>
<p style="text-align: left;">What does BaseT mean?</p>
<p style="text-align: left;"><span><span>BaseT是什麼意思?</span></span></p>
<p id="N10648" lang="" style="text-align: left;">In 100 Mbps (megabits per second) Ethernet (known as<span> fast Ethernet</span>), there are three types of physical wiring that can carry signals:</p>
<ul lang="" style="text-align: left;">
<li lang="">100BASE-T4 (four pairs of telephone twisted-pair wire)</li>
<li lang="">100BASE-TX (two pairs of data-grade twisted-pair wire)</li>
<li lang="">100BASE-FX (a two-strand optical fiber cable)</li>
</ul>
<p id="N1065C" lang="" style="text-align: left;">The designation of BASE-T (or similar) is given by the Institute of Electrical and Electronics Engineers (IEEE). The "100" designates the media type and refers to 100 Mbps transmission speed. The word base references baseband signalling. This means only Ethernet signals are carried on the cable. T4, TX, and FX designates the physical medium that carries the digital signal.</p>
<p id="N1065F" lang="" style="text-align: left;">The TX and FX types are sometimes displayed as 100BASE-X. 100BASE-T and 100BaseT are equivalent designations.</p>
<p id="N10648" lang="" style="text-align: left;"><span>在100 Mbps（兆位/秒）的以太網（稱為快速以太網</span><span>）中，有三種類型的物理線路可以承載信號：</span><br/><span></span></p>
<ul lang="" style="text-align: left;">
<li lang=""><span><span>100BASE-T4（四對電話雙絞線）</span></span></li>
<li lang=""><span><span>100BASE-TX（兩對數據級雙絞線）</span></span></li>
<li lang=""><span><span>100BASE-FX（兩股光纜）</span></span></li>
</ul>
<p id="N1065C" lang="" style="text-align: left;"><span><span>電氣電子工程師學會（IEEE）給出了BASE-T（或類似名稱）的名稱。</span><span>“ 100”表示媒體類型，表示100 Mbps的傳輸速度。</span><span>基詞一詞指基帶信令。</span><span>這意味著電纜上僅承載以太網信號。</span><span>T4，TX和FX表示承載數字信號的物理介質。</span></span></p>
<p id="N1065F" lang="" style="text-align: left;"><span><span>TX和FX類型有時顯示為100BASE-X。</span><span>100BASE-T和100BaseT是等效的名稱。</span></span></p>
<p lang="" style="text-align: left;"><span><span></span></span></p>
<p lang="" style="text-align: left;"><span><span>To install an NIC, follow these steps:</span></span></p>
<ol lang="">
<li lang="" style="text-align: left;">Check documentation to verify which NIC will match your expansion slots (PCI or PCIe) and the LAN requirements. Ensure that the adapter will work with the motherboard.</li>
<li lang="" style="text-align: left;">Power down the computer and disconnect the main power cord from the machine.</li>
<li lang="" style="text-align: left;">Following safe repair practice (proper grounding/anti-static strap), open the side cover of the computer to inspect available expansion slots.</li>
<li lang="" style="text-align: left;">Match the connector/pinouts of the new NIC card and verify it matches the proposed slot.</li>
<li lang="" style="text-align: left;">Remove the corresponding computer PCI option slot cover from the back panel.</li>
<li lang="" style="text-align: left;">Line up the connector of the NIC to the expansion slot and seat it firmly as you guide the bracket up to the back panel of the computer, ensuring proper alignment. Tighten the new NIC with the screw that is usually supplied.</li>
<li lang="" style="text-align: left;">Close the side cover of the computer following safe repair procedures.</li>
<li lang="" style="text-align: left;">Reconnect the main power cord.</li>
<li lang="" style="text-align: left;">Power up the machine.</li>
</ol>
<p id="N106D0" lang="" style="text-align: left;">After the NIC hardware is installed, the drivers should install automatically, depending on the operating system. For Windows (Vista/Win7/Win8.1/Win10), verify connectivity in the network and sharing center. For Linux, go to network settings, and search online for the appropriate driver depending on the<span> </span><a aria-describedby="N106D4" class="extra" id=""></a>Linux distribution<span> </span>, such as Red Hat Linux or Ubuntu).</p>
</div>
</div>
<p id="N106AF" lang=""><span>要安裝NIC，請按照下列步驟操作：</span></p>
<ol lang="">
<li lang=""><span><span>查看文檔，以確認哪個NIC將與您的擴展插槽（PCI或PCIe）和LAN要求相匹配。</span><span>確保適配器可與主板配合使用。</span></span></li>
<li lang=""><span><span>關閉計算機電源，然後從計算機上斷開主電源線。</span></span></li>
<li lang=""><span><span>按照安全維修慣例（正確的接地/防靜電皮帶），打開計算機的側蓋，檢查可用的擴展槽。</span></span></li>
<li lang=""><span><span>匹配新NIC卡的連接器/引腳，並驗證它是否與建議的插槽匹配。</span></span></li>
<li lang=""><span><span>從背面板上卸下相應的計算機PCI選件插槽蓋。</span></span></li>
<li lang=""><span><span>將NIC的連接器對準擴展插槽，並在將支架向上推至計算機的背面板上時將其牢固就位，以確保正確對齊。</span><span>用通常提供的螺釘擰緊新的NIC。</span></span></li>
<li lang=""><span><span>請按照安全維修步驟關閉計算機的側蓋。</span></span></li>
<li lang=""><span><span>重新連接主電源線。</span></span></li>
<li lang=""><span><span>打開機器電源。</span></span></li>
</ol>
<p id="N106D0" lang=""><span><span>安裝NIC硬件後，驅動程序應根據操作系統自動安裝。</span><span>對於Windows（Vista / Win7 / Win8.1 / Win10），請驗證網絡和共享中心中的連接。</span><span>對於Linux，請轉到網絡設置，然後根據</span></span><a aria-describedby="N106D4" class="extra" id=""></a><span><span>Linux發行版</span></span><span><span>（例如Red Hat Linux或Ubuntu）</span><span>在線搜索適當的驅動程序<span> </span></span><span>。</span></span></p>
<p><span class="imagewrap"><span class="image"><img alt="NIC的照片。 該卡是一個矩形板。 它的左側有金針，金屬端。 從金屬端伸出的端口有兩個：同軸端口和以太網端口。" class="popimg" id="_i_0" onclick="loadImageFromPage(this);" src="https://oli.cmu.edu/repository/webcontent/d826575d0a0001dc3e9f244fa018c560/PCH10/webcontent/PCH10/image5.jpeg" title="NIC的照片。 該卡是一個矩形板。 它的左側有金針，金屬端。 從金屬端伸出的端口有兩個：同軸端口和以太網端口。"/></span><span class="caption" lang=""></span></span></p>
<p id="N106E1" lang="" style="text-align: center;"><span><span>帶有同軸端口的NIC。</span></span></p>
<p><span class="imagewrap"><span class="caption" lang=""></span></span><span class="imagewrap"><span class="image"><img alt="NIC PCI Express卡的照片。 它是一個矩形板，帶有從卡的底部伸出的金針。" class="popimg" id="_i_2" onclick="loadImageFromPage(this);" src="https://oli.cmu.edu/repository/webcontent/d826575d0a0001dc3e9f244fa018c560/PCH10/webcontent/PCH10/image6.jpeg" title="NIC PCI Express卡的照片。 它是一個矩形板，帶有從卡的底部伸出的金針。"/></span><span class="caption" lang=""></span></span></p>
<p id="N106F0" lang="" style="text-align: center;"><span><span>英特爾82574L千兆位以太網NIC PCI Express x1卡。</span></span></p>
<p lang="" style="text-align: center;"><span><span></span></span></p>
<p lang=""><span><span>In the lab below, you should install a new network interface card (NIC). In doing so, be sure that the card has the right pinout. Also, be sure to use proper ESD precautions.</span></span></p>
<p id="N106F9" lang=""><span><span>在下面的實驗室中，您應該安裝新的網絡接口卡（NIC）。</span><span>這樣做時，請確保卡具有正確的引腳排列。</span><span>另外，請確保使用適當的ESD預防措施。</span></span></p>
<h2>PCH11</h2>
<p><span><span></span></span>PCH11:網路媒體(Networking Media)</p>
<p></p>
<p><span><strong>光纖電纜 </strong> </span>Fiber-Optic Cable</p>
<p>總覽  Overview</p>
<p><span>In this module, we’re going to discuss the various types of network media. We will begin with fiber-optic cable and then discuss twisted pair cable and coaxial cable. For each of these cable types, we will discuss appearance, characteristics, and types of connectors, as well as speed and limitations.</span></p>
<p><span><span>在本模塊中，我們將討論各種類型的網絡媒體。</span><span>我們將從光纖電纜開始，然後討論雙絞線電纜和同軸電纜。</span><span>對於每種電纜類型，我們將討論連接器的外觀，特性和類型，以及速度和限制。</span></span></p>
<p><span></span>-------------------------------------------------------------------------------------------------------</p>
<p><span>光纖電纜  Fiber-Optic Cable</span></p>
<p><span>Fiber-optic cables are constructed by using a glass core at the center of the cable that is surrounded by cladding. In order to send data from one end of the cable to the other, light from a light-emitting diode (LED) or laser is used to transmit the signal down the glass fiber at the center of the cable. Because the data is being transmitted using light, it is immune to the effects of electromagnetic interference (EMI) that impact traditional copper-based cables, such as twisted pair and coaxial cables. Fiber-optic cables possess the ability to send the data a very far distance (many miles) without the use of a repeater. They also can carry a significant amount of data due to their large bandwidth and the information traveling at light speed. Their bandwidth can be measured in gigabits or even terabits per second. There are two types of fiber cables: multimode and single-mode fiber.</span></p>
<p><span><span>光纖電纜是通過在電纜的中心使用玻璃芯構成的，該芯層被包層圍繞。</span><span>為了將數據從電纜的一端發送到另一端，可使用來自發光二極管（LED）或激光的光沿電纜中心的玻璃纖維向下傳輸信號。</span><span>由於數據是通過光傳輸的，因此不受電磁干擾（EMI）的影響，電磁干擾會影響傳統的銅基電纜，如雙絞線和同軸電纜。</span><span>光纖具有無需使用中繼器就可以很遠的距離（許多英里）發送數據的能力。</span><span>由於它們的大帶寬和以光速傳播的信息，它們還可以攜帶大量數據。</span><span>它們的帶寬可以每秒千兆比特或什至兆兆比特來度量。</span></span></p>
<p style="text-align: center;"><img src="https://oli.cmu.edu/repository/webcontent/d826575d0a0001dc3e9f244fa018c560/PCH11/webcontent/PCH11/image1.png"/></p>
<p style="text-align: left;"></p>
<p style="text-align: center;"><span>光纖電纜。</span></p>
<p id="N106A2" lang="">Multimode fiber cables (MMF) contain a larger core than the single-mode variety. The core size for a multimode fiber is 62.5 microns. A micron is a very small unit of measurement—it is actually even smaller than the width of a human hair. MMF’s larger core enables multiple modes of travel for the light from one end of the cable to the other. This allows a single fiber to carry multiple signals across it, with each signal being transmitted at a slightly different reflective angle. When the light reaches the destination, the signals are then converted back into 1s and 0s and passed to the computer by the network interface card. Multimode fiber is commonly used in shorter distance fiber connections, such as from a router to a switch, a switch to a switch, or a server to a switch.</p>
<p id="N106A5" lang="">Single-mode fiber cables (SMF) contain a much smaller core than the multimode variety. The core size for SMF is 10 microns. SMF’s smaller core only allows for a single mode of travel for the light from one end of the cable to the other. This straight-through connection allows for data to travel longer distances without a repeater than it can travel using MMF. When the light reaches the destination, the signals are then converted back into 1s and 0s and passed to the computer by the network interface card. Single mode fiber is commonly used in very long distance fiber connections, such as a backbone connection from one local area network to another.</p>
<p id="N106A2" lang=""><span>多模光纜（MMF）的芯線比單模光纜大。多模光纖的纖芯尺寸為62.5微米。微米是非常小的度量單位，實際上甚至比人類頭髮的寬度還小。MMF的較大芯線實現了從電纜一端到另一端的多種傳播模式。這樣一來，單根光纖就可以在其上傳輸多個信號，而每個信號的反射角度都會稍有不同。當光線到達目的地時，信號然後被轉換回1s和0s，並通過網絡接口卡傳遞到計算機。多模光纖通常用於較短距離的光纖連接中，例如從路由器到交換機，從交換機到交換機或從服務器到交換機。</span></p>
<p id="N106A5" lang=""><span><span>單模光纜（SMF）的芯線比多模光纜小得多。</span><span>SMF的芯尺寸為10微米。</span><span>SMF的較小芯線僅允許光從電纜一端到另一端的單一傳播模式。</span><span>這種直通連接允許數據在沒有中繼器的情況下傳輸的距離比使用MMF傳輸的距離更長。</span><span>當光線到達目的地時，信號然後被轉換回1s和0s，並通過網絡接口卡傳遞到計算機。</span><span>單模光纖通常用於超長距離的光纖連接中，例如從一個區域網到另一個區域網的骨幹連接。</span></span></p>
<p lang=""><span><span></span></span>-------------------------------------------------------------------------------------------------------</p>
<p lang=""><span>光纖電纜</span><span>連接器  </span>Fiber-Optic Cable Connectors</p>
<p id="N106B2" lang="">Fiber cables only come in the two types discussed above: single-mode and multimode. However, the ends of each of these cables come in four varieties.</p>
<p id="N106B5" lang="">The subscriber connector (SC) is a fiber-optic cable connector that uses a push-pull mechanism to latch into the port, similar to common audio and video cables. If you want to enable bidirectional transmission for sending and receiving data, you need to have two fiber cables, so sometimes a dual SC connector is used.</p>
<p id="N106B8" lang="">The straight tip (ST) connector is a fiber-optic cable connector that uses a bayonet plug and socket. It was the first de facto standard connector for most commercial wiring using fiber cables and it is very commonly found in fiber networks.</p>
<p id="N106BB" lang="">The Lucent connector (LC) is a miniaturized version of the fiber-optic SC connector. It looks somewhat like the SC, but is half the size, with a 1.25 mm ferrule instead of 2.5 mm, making it very useful when connecting multiple devices in a small area, such as on a 24-port switch’s front panel.</p>
<p id="N106BE" lang="">The mechanical transfer-registered jack (MT-RJ) connector is a fiber-optic cable connector that is very popular for small-form-factor devices due to its small size. This connector houses two fibers and mates with locating pins on the plug. These connectors are commonly found connecting a switch to a patch panel, because both devices have a limited area on their front panels.</p>
<p id="N106B2" lang=""><span>光纖電纜僅屬於上述兩種類型：單模和多模。但是，每條電纜的末端都有四種。</span></p>
<p id="N106B5" lang=""><span><span>用戶連接器（SC）是一種光纖電纜連接器，與普通的音頻和視頻電纜類似，它使用推挽機制鎖入端口。</span><span>如果要啟用雙向傳輸以發送和接收數據，則需要使用兩根光纖電纜，因此有時會使用雙SC連接器。</span></span></p>
<p id="N106B8" lang=""><span><span>筆直（ST）連接器是使用卡口插頭和插座的光纖電纜連接器。</span><span>它是大多數使用光纖電纜進行商業佈線的第一個事實上的標準連接器，並且在光纖網絡中非常常見。</span></span></p>
<p id="N106BB" lang=""><span><span>朗訊連接器（LC）是光纖SC連接器的微型版本。</span><span>它看上去有點像SC，但尺寸只有一半，只有1.25毫米而不是2.5毫米的插芯，因此在小區域（例如24端口交換機的前面板）連接多個設備時非常有用。</span></span></p>
<p id="N106BE" lang=""><span><span>機械傳輸註冊插孔（MT-RJ）連接器是一種光纖電纜連接器，由於其尺寸小，在小型設備中非常受歡迎。</span><span>該連接器容納兩根光纖，並與插頭上的定位銷配對。</span><span>通常發現這些連接器將開關連接到配線架，因為兩個設備的前面板都有有限的區域。</span></span></p>
<p lang=""><span><span></span></span></p>
<p lang=""><span><span></span></span></p>
<p lang=""><span><span></span></span>-------------------------------------------------------------------------------------------------------</p>
<p><span><strong>雙絞線</strong>  </span>Twisted Pair Cable</p>
<p id="N1068B" lang="">While fiber-optic cable is great for its speed, distance, and security, it hasn’t yet become commonplace in most networks. Instead, we are still using the same type of cabling we have been using for the past two to three decades — twisted pair. Twisted pair cable is the most popular physical LAN media in the world today. Each cable contains four pairs of individually insulated strands of copper wire. Each pair is twisted together to minimize the amount of electromagnetic interference (EMI). The more twists there are in the cable, the less EMI there will be. Twisted pair cable is broken up into two types: unshielded twisted pair (UTP) and shielded twisted pair (STP).</p>
<p lang=""><span>儘管光纜在速度，距離和安全性方面都非常出色，但在大多數網絡中尚未普及。</span><span>相反，我們仍在使用過去兩到三十年來一直使用的相同類型的電纜-雙絞線。</span><span>雙絞線電纜是當今世界上最流行的物理LAN介質。</span><span>每條電纜包含四對獨立絕緣的銅線。</span><span>每對絞合在一起以最大程度地減少電磁干擾（EMI）。</span><span>電纜中的扭曲越多，EMI越小。</span><span>雙絞線分為兩種類型：非屏蔽雙絞線（UTP）和屏蔽雙絞線（STP）。</span></p>
<p style="text-align: center;"><span class="imagewrap"><span class="image"><img alt="Photograph of connector. The end is transparent plastic and cables and copper connections are visible." class="popimg" id="_i_0" onclick="loadImageFromPage(this);" src="https://oli.cmu.edu/repository/webcontent/d826575d0a0001dc3e9f244fa018c560/PCH11/webcontent/PCH11/image6.png" title="Photograph of connector. The end is transparent plastic and cables and copper connections are visible."/></span></span></p>
<p style="text-align: center;"><span class="imagewrap"><span class="image"><span>光纖連接器。</span></span></span></p>
<p id="N1069C" lang="">Shielded twisted pair cable is built very similarly to unshielded twisted pair, except that the pairs of wires are also surrounded by a metallic shielding (like foil). This outer foil shielding minimizes the EMI to which the cable is exposed. This increases the security and reliability of the cable. Unfortunately, however, this also increases the cost of the cable, so it is typically used only in high-production environments where the extra security is worth the extra cost.</p>
<p id="N1069F" lang="">The more common type of cabling is unshielded twisted pair cable. Instead of using extra shielding, this cable relies on the twisting of its copper pairs to minimize the effects of EMI. Each twisted pair is twisted to insulate itself from the other pairs, and because there is no additional shielding, it is available at a lower cost than STP. Therefore, UTP is the most common media of choice for small office, home office, residential, and many commercial networks.</p>
<p id="N1069C" lang=""><span>屏蔽雙絞線電纜的構造與非屏蔽雙絞線非常相似，不同的是，成對的電線也被金屬屏蔽層（如金屬箔）圍繞。外部箔屏蔽層可最大程度地減小電纜所遭受的EMI。這增加了電纜的安全性和可靠性。但是，不幸的是，這也增加了電纜的成本，因此通常僅在高生產環境中使用，在這種環境中，額外的安全性值得額外的成本。</span></p>
<p id="N1069F" lang=""><span><span>電纜的最常見類型是非屏蔽雙絞線電纜。</span><span>該電纜不使用額外的屏蔽，而是依靠其銅線對的絞合來最大程度地減小EMI的影響。</span><span>每個雙絞線都經過絞合，以使其自身與其他雙絞線絕緣，並且由於沒有額外的屏蔽，因此可以以比STP更低的成本獲得。</span><span>因此，UTP是小型辦公室，家庭辦公室，住宅和許多商業網絡中最常見的選擇媒體。</span></span></p>
<p lang="" style="text-align: center;"><img alt="Photograph of a blue cable with part of the sheathing removed. Inside, there are four twisted pair cables: green and white, orange and white, blue and white, and brown and white. The four twisted pairs are also twisted together." src="https://oli.cmu.edu/repository/webcontent/d826575d0a0001dc3e9f244fa018c560/PCH11/webcontent/PCH11/image7.png"/></p>
<p lang="" style="text-align: center;"><span>無護套的雙絞線電纜。</span></p>
<p lang="" style="text-align: left;"><span></span>-------------------------------------------------------------------------------------------------------</p>
<p lang="" style="text-align: left;"><span>分類雙絞線電纜  Categorizing Twisted Pair Cable</span></p>
<p id="N106B9" lang="">Twisted pair cable is categorized based on a category (cat) number. For example, cat 3, or category 3, is the oldest type of cable that we use. It was introduced back in the 1980s and 1990s for use in the first star topologies. The maximum throughput or bandwidth of cat 3 cabling is only 10 Mbps (megabits per second). The cat 3, like all twisted pair cabling, cannot go farther than 100 meters without using a repeater, switch, or active hub to amplify the signal. This limited distance is attributable to the copper wiring in these cables. As the signal travels over the copper wire, the natural resistance to the wire decreases the signal’s strength, and it eventually becomes too weak for the distant end to receive. For this reason, there is a 100 meter limitation when building and designing a twisted pair network.</p>
<p id="N106BC" lang="">Cat 5 cables were an improvement on the older cat 3 cables and contain more twists, giving them more shielding from EMI and a maximum bandwidth of 100 Mbps. Cat 5e, or cat 5 enhanced, increased the speed of the maximum throughput to one Gbps, or 1000 Mbps, and became a gap filler until cat 6 cabling became commonplace.</p>
<p id="N106BF" lang="">Cat 6a overcomes the 37-55 meter limitation of cat 6 when used in 10GBaseT. Cat 7, the newest standard, is shielded and provides connections up to 10 Gbps with a maximum distance of 100 meters. “Cat 7 and cat 7a cabling will be used for backbone connections between servers within a data center” and “provide an alternative to using fiber-optic cabling within the data center” (from<a href="http://www.cablestogo.com/learning/library/data-center/cat7-overview" id="_i_4" lang="" target="_blank">http://www.cablestogo.com/learning/library/data-center/cat7-overview</a>).</p>
<p id="N106C8" lang="">All cable categories up to cat 5e and cat 6a have a maximum distance of 100 meters. When used in 10GBaseT, the maximum distance for cat 6 is 55 meters. Cat 7 is shielded and exceeds the 100 meter limit. As the category of the cable increases, so do the number of twists per inch and the frequency range, allowing for more data and improved protection against EMI. Best practice for copper cabling is<span> </span><em class="italic" lang="">not<span> </span></em>to run cable lengths to the maximum because attenuation will reduce data capacity.</p>
<div class="section" id="categorizing_twisted_pair">
<div class="sectionContain">
<p id="N106B9" lang=""><span>雙絞線電纜根據類別（類別）編號進行分類。例如，類別3（或類別3）是我們使用的最古老的電纜類型。它是在1980年代和1990年代引入的，用於第一批星形拓撲。Cat 3電纜的最大吞吐量或帶寬僅為10 Mbps（兆位/秒）。與所有雙絞線電纜一樣，如果不使用中繼器，交換機或有源集線器來放大信號，則Cat 3不能走超過100米。這種有限的距離歸因於這些電纜中的銅線。當信號在銅線上傳輸時，導線的固有電阻會降低信號的強度，並且最終變得太弱而無法接收遠端。為此原因，</span></p>
<p id="N106BC" lang=""><span>Cat 5電纜是對較舊的Cat 3電纜的改進，並包含更多的絞合線，從而使它們具有更大的EMI屏蔽能力，最大帶寬為100 Mbps。Cat 5e或Cat 5增強了，將最大吞吐量的速度提高到1 Gbps或1000 Mbps，並成為了空白，直到Cat 6電纜變得司空見慣。</span></p>
<p id="N106BF" lang=""><span>當在10GBaseT中使用時，Cat 6a克服了Cat 6的37-55米的限制。最新標準Cat 7被屏蔽，並提供高達10 Gbps的連接，最大距離為100米。“ Cat 7和Cat 7a電纜將用於數據中心內服務器之間的主干連接”，並且“提供在數據中心內使用光纖電纜的替代方法”（來自<span> </span></span><a href="http://www.cablestogo.com/learning/library/data-center/cat7-overview" id="_i_4" lang="" target="_blank"><span>http://www.cablestogo.com/learning/庫/數據中心/ cat7-overview</span></a><span>）。</span></p>
<p id="N106C8" lang=""><span>直至Cat 5e和Cat 6a為止的所有電纜類別的最大距離為100米。在10GBaseT中使用時，類別6的最大距離為55米。Cat 7被屏蔽並超過100米的限制。隨著電纜類別的增加，每英寸的捻數和頻率範圍也會增加，從而可以提供更多的數據並改善對EMI的保護。銅纜佈線的最佳實踐是</span><em class="italic" lang=""><span>不要</span></em><span>使電纜長度最大，因為衰減會降低數據容量。</span></p>
<table align="center" cellspacing="0" class="wbtable" lang="">
<thead>
<tr>
<th lang=""><em class="bold" lang="">Category</em></th>
<th lang=""><em class="bold" lang="">Maximum Throughput</em></th>
<th lang=""><em class="bold" lang="">LAN Application</em></th>
</tr>
<tr>
<th lang="">Cat 3</th>
<th lang="">10Mbps</th>
<th lang="">10BaseT; 100BaseT4deprecated</th>
</tr>
<tr>
<th lang="">Cat 5</th>
<th lang="">100Mbps</th>
<th lang="">10/100/1000BaseT100/1000BaseTX</th>
</tr>
<tr>
<th lang="">Cat 5e</th>
<th lang="">1Gbps (1000Mbps)</th>
<th lang="">10/100/1000BaseT100/1000BaseTX</th>
</tr>
<tr>
<th lang="">Cat 6</th>
<th lang="">1Gbps (1000Mbps)</th>
<th lang="">10/100/1000BaseT100/1000BaseTX10GBaseT</th>
</tr>
<tr>
<th lang="">Cat 6a</th>
<th lang="">10Gbps</th>
<th lang="">10/100/1000BaseT100/1000/BaseTX10GBaseT</th>
</tr>
<tr>
<th lang="">Cat 7</th>
<th lang="">10Gbps</th>
<th lang="">10/100/1000BaseT100/1000/BaseTX10GBaseT</th>
</tr>
</thead>
</table>
<p></p>
<table align="center" cellspacing="0" class="wbtable" lang="">
<thead>
<tr>
<th lang=""><em class="bold" lang=""><span>類別</span></em></th>
<th lang=""><em class="bold" lang=""><span>最大吞吐量</span></em></th>
<th lang=""><em class="bold" lang=""><span>局域網應用</span></em></th>
</tr>
<tr>
<th lang=""><span>Cat 3</span></th>
<th lang=""><span>10Mbps</span></th>
<th lang=""><span>10BaseT;<span> </span>不推薦使用100BaseT4</span></th>
</tr>
<tr>
<th lang=""><span>Cat 5</span></th>
<th lang=""><span>100Mbps</span></th>
<th lang=""><span>10/100 / 1000BaseT100 / 1000BaseTX</span></th>
</tr>
<tr>
<th lang=""><span>Cat 5e</span></th>
<th lang=""><span>1Gbps（1000Mbps）</span></th>
<th lang=""><span>10/100 / 1000BaseT100 / 1000BaseTX</span></th>
</tr>
<tr>
<th lang=""><span>Cat 6</span></th>
<th lang=""><span>1Gbps（1000Mbps）</span></th>
<th lang=""><span>10/100 / 1000BaseT100 / 1000BaseTX10GBaseT</span></th>
</tr>
<tr>
<th lang=""><span>Cat 6a</span></th>
<th lang=""><span>10Gbps</span></th>
<th lang=""><span>10/100 / 1000BaseT100 / 1000 / BaseTX10GBaseT</span></th>
</tr>
<tr>
<th lang=""><span>Cat 7</span></th>
<th lang=""><span>10Gbps</span></th>
<th lang=""><span>10/100 / 1000BaseT100 / 1000 / BaseTX10GBaseT</span></th>
</tr>
</thead>
<tbody></tbody>
</table>
</div>
</div>
<div class="section" id="N1072E">
<div class="sectionContain">
<p><span title="快速向上滾動"><span><span>雙絞線連接器  Twisted Pair Connectors</span></span></span></p>
<p id="N10735" lang="">Twisted pair cables come with three main types of connectors. The first is the RJ-45 connector, which is an eight-pin connector used in Ethernet networks. Even though most Ethernet networks use only four pins, the RJ-45 provides eight pins for future use and capabilities. The first four pins are used to transmit (two pins) and receive (two pins).</p>
<p id="N10738" lang="">The RJ-11 connector is used in the standard telephone system. The RJ-11 is a six-pin connector, but commonly only two pins are used for a telephone (transmit and receive). If you have a two-line phone, then four pins are used: two pins to transmit and two pins to receive.</p>
<p id="N1073B" lang="">Finally, the DB-9 connector is used for RS-232 signals. This connector looks like a standard serial connector. It is used commonly for asynchronous serial communications, like connecting to an external modem. In modern networks, you will see this type of connector on a “rollover cable.” A rollover cable has a DB-9 on one side (which is connected to your laptop’s serial port), and an RJ-45 connector on the other side (which is used to connect to Cisco routers and switches to do administration tasks).</p>
<p id="N1073E" lang="">A straight-through cable is a type of twisted pair cable that is used in local area networks to connect a computer to a network hub, such as a router. This type of cable is also sometimes called a patch cable. Both ends of the cable have an identical pinout, hence the name “straight-through.” A crossover cable switches the pinouts of the two ends of the cable, making the transmit and receive pins alternate on the two ends. This allows two workstations to connect directly to each other without the need for a hub, switch, or router.</p>
<p id="N10735" lang=""><span><span>雙絞線電纜帶有三種主要類型的連接器。</span><span>第一個是RJ-45連接器，它是以太網網絡中使用的八針連接器。</span><span>即使大多數以太網僅使用四個引腳，RJ-45仍提供八個引腳供將來使用和使用。</span><span>前四個引腳用於發送（兩個引腳）和接收（兩個引腳）。</span></span></p>
<p id="N10738" lang=""><span><span>RJ-11連接器用於標準電話系統。</span><span>RJ-11是一個六針連接器，但電話通常僅使用兩個針（發送和接收）。</span><span>如果您有兩線電話，則使用四個引腳：兩個引腳進行發送，兩個引腳進行接收。</span></span></p>
<p id="N1073B" lang=""><span><span>最後，DB-9連接器用於RS-232信號。</span><span>該連接器看起來像標準的串行連接器。</span><span>它通常用於異步串行通信，例如連接到外部調製解調器。</span><span>在現代網絡中，您將在“翻轉電纜”上看到這種類型的連接器。</span><span>翻轉電纜的一側為DB-9（連接到筆記本電腦的串行端口），另一側為RJ-45連接器（用於連接到Cisco路由器和交換機以執行管理任務）。</span></span></p>
<p id="N1073E" lang=""><span><span>直通電纜是雙絞線電纜的一種，在局域網中用於將計算機連接到網絡集線器（例如路由器）。</span><span>這種類型的電纜有時也稱為跳線。</span><span>電纜的兩端都具有相同的引出線，因此名稱為“直通”。</span><span>交叉電纜切換電纜兩端的引腳分配，使發送和接收引腳在兩端交替。</span><span>這允許兩個工作站直接相互連接，而無需集線器，交換機或路由器。</span></span></p>
<span class="imagewrap"><span class="imagewrap"><span class="image"><img alt="帶有透明塑料矩形連接器的電纜的照片。" class="popimg" id="_i_5" onclick="loadImageFromPage(this);" src="https://oli.cmu.edu/repository/webcontent/d826575d0a0001dc3e9f244fa018c560/PCH11/webcontent/PCH11/image8.png" title="帶有透明塑料矩形連接器的電纜的照片。"/></span><span class="caption" lang=""></span></span></span>
<p id="N10747" lang="" style="text-align: center;"><span><span>以太網電纜。</span></span></p>
<p lang="" style="text-align: left;"><span><span>-------------------------------------------------------------------------------------------------------</span></span></p>
<p lang="" style="text-align: left;"><span><span><strong>同軸電纜</strong>  Coaxial Cable</span></span></p>
<p id="N10690" lang="">Coaxial cable is a much older media technology. Coaxial cable, also known as coax for short, is composed of two conductors. The inner conductor, which is known as the insulated conductor (center wire), is the copper wire over which data is passed. The outer conductor is the braided metal shield and aids in protecting the inner wire from physical injury and the effects of EMI. Much like the shielding we saw in shielded twisted pair, the outer shield helps keep electromagnetic interference out of the data’s path. Between the inner conductor and the outer shield, we find an insulated core that prevents any data transfer between the inner core and outer shield. The outside of the cable is made of a flexible plastic jacket, much like the twisted pair cabling. Coaxial cabling was included in the first Ethernet standard as 10Base5 (thicknet) and continued to be used throughout updates as 10Base2 (thinnet) as well as being most commonly used in bus and ring networks. UTP cabling however, is easier to work with in a star topology and is significantly less expensive.</p>
<p lang=""><span>同軸電纜是一種較為老舊的媒體技術。</span><span>同軸電纜（也簡稱為同軸電纜）由兩個導體組成。</span><span>內部導體（稱為絕緣導體（中心線））是在其上傳遞數據的銅線。</span><span>外導體是編織的金屬屏蔽層，有助於保護內線免受物理傷害和EMI的影響。</span><span>就像我們在屏蔽雙絞線中看到的屏蔽一樣，外部屏蔽有助於將電磁干擾保持在數據路徑之外。</span><span>在內部導體和外部屏蔽層之間，我們找到了一個絕緣芯，可防止在內芯和外部屏蔽層之間進行任何數據傳輸。</span><span>電纜的外部由柔軟的塑料護套製成，非常類似於雙絞線電纜。</span><span>同軸電纜已包含在第一個以太網標準中，稱為10Base5（Thicknet），並在整個更新中繼續用作10Base2（Thinnet），並在總線和環形網絡中最常用。</span><span>但是，UTP電纜更容易在星形拓撲中使用，並且價格便宜許多。</span></p>
<p lang="" style="text-align: center;"><span><span><span class="imagewrap"><span class="image"><img alt="Image of a black cable with connector. The ring securing the cable to the connector is removed to expose the braided metal shield. The connector is gold with a white tip. A copper cable is protruding from the tip." class="popimg" id="_i_0" onclick="loadImageFromPage(this);" src="https://oli.cmu.edu/repository/webcontent/d826575d0a0001dc3e9f244fa018c560/PCH11/webcontent/PCH11/image9.png" title="Image of a black cable with connector. The ring securing the cable to the connector is removed to expose the braided metal shield. The connector is gold with a white tip. A copper cable is protruding from the tip."/></span><span class="caption" lang=""></span></span></span></span></p>
<p id="N10699" lang="" style="text-align: center;"><span>同軸電纜</span></p>
<p lang="" style="text-align: left;"><span>-------------------------------------------------------------------------------------------------------</span></p>
<div class="section" id="N106A2">
<div class="sectionContain">
<p lang=""><span>同軸電纜類型  Coaxial Cable Types</span></p>
<p id="N106A9" lang="">There are three dominant coaxial cable types. The RG-6 is commonly used by cable TV companies to connect individual homes to the TV network. These cables are thick and usually used for outside connections to withstand the effects of the weather. The RG-58 is a type of coaxial cable that was heavily used in early 10Base2 (thinnet) networks, such as bus and ring topologies. Finally, the RG-59 is the traditional coaxial cable used to carry composite video between two nearby devices, such as your TV and the cable box. If you are a cable Internet user, this is also used to carry the WAN connection from your wall jack to your cable modem.</p>
<p lang=""><span>共有三種主要的同軸電纜類型。</span><span>有線電視公司通常使用RG-6將單個房屋連接到電視網絡。</span><span>這些電纜很粗，通常用於外部連接以承受天氣的影響。</span><span>RG-58是一種同軸電纜，在諸如總線和環形拓撲之類的早期10Base2（瘦網）網絡中大量使用。</span><span>最後，RG-59是傳統的同軸電纜，用於在兩個附近的設備（例如電視和電纜盒）之間傳送複合視頻。</span><span>如果您是有線Internet用戶，這也可用於將WAN連接從牆壁插孔連接到電纜調製解調器。</span></p>
</div>
</div>
<p lang="" style="text-align: left;"><span>同軸電纜連接器  Coaxial Cable Connectors</span></p>
<p id="N106B5" lang="" style="text-align: left;">While there were three types of cables, there are only two types of common connectors used with coaxial cable. The first is called BNC, from the name Bayonet Neill-Concelman. Sometimes people also call this the British Naval connector, because the BNC was heavily used by the British in their shipboard radio systems. This connector was commonly used in early Ethernet networks and it has a “push and twist” type of connector to secure the cable to the network device.</p>
<p id="N106B8" lang="" style="text-align: left;">The F-type connector is the modern type of coaxial cable connector. It is typically used for cable TV and cable modem connections. It is connected by screwing the connector onto a threaded jack to secure the connection.</p>
<p id="N106B5" lang="" style="text-align: left;"><span>雖然有三種類型的電纜，但同軸電纜僅使用兩種類型的普通連接器。第一個稱為BNC，名稱為刺刀Neill-Concelman。有時人們也將其稱為英國海軍連接器，因為英國人在其艦載無線電系統中大量使用了BNC。該連接器通常用於早期的以太網網絡，並且具有“推壓式”連接器，用於將電纜固定至網絡設備。</span></p>
<p id="N106B8" lang="" style="text-align: left;"><span><span>F型連接器是現代類型的同軸電纜連接器。</span><span>它通常用於有線電視和電纜調製解調器的連接。</span><span>通過將連接器擰到帶螺紋的插孔上進行連接以固定連接。</span></span></p>
<span class="imagewrap"><span class="imagewrap"><span class="image"><img alt="Photograph of a wall plate with five coaxial jacks. A coaxial cable with a blue band at the end is connected to one of the jacks." class="popimg" id="_i_2" onclick="loadImageFromPage(this);" src="https://oli.cmu.edu/repository/webcontent/d826575d0a0001dc3e9f244fa018c560/PCH11/webcontent/PCH11/image10.png" title="Photograph of a wall plate with five coaxial jacks. A coaxial cable with a blue band at the end is connected to one of the jacks."/></span><span class="caption" lang=""></span></span></span>
<p id="N106C1" lang="" style="text-align: center;"><span>同軸插孔。</span></p>
<p lang="" style="text-align: left;">銅線和光纖  Copper vs. Fiber</p>
<p lang="" style="text-align: left;"><span>When we compare the advantages and disadvantages of fiber-optic cables and copper (twisted pair) cables, we have to consider that fiber-optic has a higher bandwidth (measured in Gbps or Tbps), it can carry its signal many miles without the need of a repeater, it is immune to the effects of EMI, and it has much better security than traditional twisted pair cables. However, twisted pair cabling does hold some advantages of its own. For one, it is much less expensive than fiber-optic cabling. Also, copper wiring is much easier to install, taking only a few hours to learn. Finally, twisted pair cabling can be created and terminated using inexpensive tools. For example, a complete copper wiring toolset can be bought online for less than $50, while a complete fiber-optic kit may cost $1000 or more. For these reasons, copper has remained the dominant media in most local area networks.</span></p>
<p lang="" style="text-align: left;"><span><span>當我們比較光纖電纜和銅纜（雙絞線）的優缺點時，我們必須考慮到光纖具有更高的帶寬（以Gbps或Tbps為單位），它可以將信號傳輸很多英里而無需作為中繼器，它不受EMI的影響，並且比傳統的雙絞線電纜具有更好的安全性。</span><span>但是，雙絞線電纜確實具有其自身的一些優點。</span><span>首先，它比光纖電纜便宜得多。</span><span>而且，銅線的安裝更容易，只需幾個小時即可學習。</span><span>最後，可以使用廉價的工具創建和終止雙絞線電纜。</span><span>例如，一套完整的銅線工具套件可以在線購買，價格不到50美元。由於這些原因，一套完整的光纖套件的價格可能在1000美元以上。</span></span></p>
<p style="text-align: left;">-------------------------------------------------------------------------------------------------------</p>
<p style="text-align: left;"><span>轉換器  </span>Converters</p>
<p id="N10678" lang="" style="text-align: left;">Because of the wide variety of cable and connector types, there is sometimes a need to convert from one type of media to another. For example, if you have to make a connection between two LANs in buildings that are located one mile apart, but your network uses Cat 5e, UTP cabling, how can you make that connection? When you look at your routers, you find they only accept RJ-45 connections, but you know that you cannot run a Cat 5e cable more than 100 meters. How can you solve this problem? With a media converter.</p>
<p id="N1067B" lang="" style="text-align: left;">Using a media converter, you can convert your RJ-45 connection into an ST, SC, or LC fiber connection, as shown in the image below. Then, you run the one-mile fiber cable to the other building, and use a media converter to convert from the ST, SC, or LC fiber connection back to the RJ-45 the other router requires. Because this is a simple, “dumb” device, it simply converts whatever is received on the first media type and repeats it back out the second media type. Common types of media converters are from Ethernet (copper) to fiber-optic (and back) or coaxial to fiber-optic (and back).</p>
<p id="N10678" lang="" style="text-align: left;"><span>由於電纜和連接器的類型多種多樣，有時需要從一種介質轉換為另一種介質。例如，如果您必須在相距一英里的建築物中的兩個LAN之間建立連接，但是您的網絡使用Cat 5e，UTP電纜，那麼如何建立連接？當您查看路由器時，會發現它們僅接受RJ-45連接，但您知道不能將Cat 5e電纜的長度超過100米。您如何解決這個問題？帶媒體轉換器。</span></p>
<p id="N1067B" lang="" style="text-align: left;"><span><span>使用媒體轉換器，您可以將RJ-45連接轉換為ST，SC或LC光纖連接，如下圖所示。</span><span>然後，將一英里的光纜連接到另一座建築物，並使用媒體轉換器將ST，SC或LC光纖連接轉換回另一台路由器所需的RJ-45。</span><span>因為這是一個簡單的“啞”設備，所以它僅轉換在第一媒體類型上接收到的所有內容，然後將其重複播放回第二媒體類型。</span><span>媒體轉換器的常見類型是從以太網（銅）到光纖（然後向後）或從同軸電纜到光纖（然後向後）。</span></span></p>
<span class="imagewrap"><span class="image"><img alt="Photograph of four converters stacked on top of each other. The two converters in the middle are identical. They are each labeled Black Box and have a power cord receptacle, an Ethernet port and two other ports. The converter on the top has an Ethernet port and two other ports. The converter on the bottom has an Ethernet port and two other ports." class="popimg" id="_i_0" onclick="loadImageFromPage(this);" src="https://oli.cmu.edu/repository/webcontent/d826575d0a0001dc3e9f244fa018c560/PCH11/webcontent/PCH11/image11.png" title="Photograph of four converters stacked on top of each other. The two converters in the middle are identical. They are each labeled Black Box and have a power cord receptacle, an Ethernet port and two other ports. The converter on the top has an Ethernet port and two other ports. The converter on the bottom has an Ethernet port and two other ports."/></span><span class="caption" lang=""></span></span>
<p id="N10683" lang="" style="text-align: center;"><span>媒體轉換器。</span></p>
作業心得
<p style="text-align: left;">利用各種對電腦硬體的知識，可以使我們利用這些設備來進行電腦的操作。也會認識網際網路的運作、電腦與電腦間資料運送會經過哪些設備，而這些設備的功能又分別是什麼。而網路間用以傳遞的介質有有哪些，這些介質的優缺點又是什麼。利用這些知識，可以瞭解電腦與網路的運作，使我們遇到相關問題時有個解決的方法。</p>
<h1>HW2</h1>
<p style="text-align: left;">Kaggle W8</p>
<p style="text-align: left;"><a href="https://www.kaggle.com/cp202040923236/cp2020w8">https://www.kaggle.com/cp202040923236/cp2020w8</a></p>
<h2>HW2-1</h2>
<pre><span class="c1"># <a href="https://nfulist.herokuapp.com/?semester=1091&amp;courseno=0776">https://nfulist.herokuapp.com/?semester=1091&amp;courseno=0776 </a>#url目標<br/></span></pre>
<pre><span class="c1">#用以處理url數據庫<br/></span><span class="kn">import</span> <span class="nn"><a name="kln-25"></a><a class="indexed_symbol local_indexed_symbol" onclick="parent.postMessage({'referent':'.kaggle.usercode.12220899.44629092.urllib'}, '*')">urllib</a>.request<br/></span><span class="c1"><br/></span><span class="n"><a name="kln-26"></a><a class="indexed_symbol local_indexed_symbol" onclick="parent.postMessage({'referent':'.kaggle.usercode.12220899.44629092.target_url'}, '*')">target_url</a></span> <span class="o">=</span> <span class="s2">"https://nfulist.herokuapp.com/?semester=1091&amp;courseno=0776" </span>#指定目標位置<br/><br/><span class="n"><a name="kln-27"></a><a class="indexed_symbol local_indexed_symbol" onclick="parent.postMessage({'referent':'.kaggle.usercode.12220899.44629092.cp1a'}, '*')">cp1b</a></span> <span class="o">=</span> <span class="p">[]</span> <br/><span class="k">for</span> <span class="n"><a name="kln-28"></a><a class="indexed_symbol local_indexed_symbol" onclick="parent.postMessage({'referent':'.kaggle.usercode.12220899.44629092.line'}, '*')">line</a></span> <span class="ow">in</span> <span class="n"><a class="indexed_symbol local_indexed_symbol" onclick="parent.postMessage({'referent':'.kaggle.usercode.12220899.44629092.urllib'}, '*')">urllib</a></span><span class="o">.</span><span class="n">request</span><span class="o">.</span><span class="n">urlopen</span><span class="p">(</span><span class="n"><a class="indexed_symbol local_indexed_symbol" onclick="parent.postMessage({'referent':'.kaggle.usercode.12220899.44629092.target_url'}, '*')">target_url</a></span><span class="p">): #打開目標網頁地址<br/><br/></span><span class="c1">#利用 int() 將字串內容轉換為整數字串<br/>#(</span><span class="n"><a class="indexed_symbol local_indexed_symbol" onclick="parent.postMessage({'referent':'.kaggle.usercode.12220899.44629092.line'}, '*')">line</a></span><span class="o">.</span><span class="n"><a class="indexed_symbol global_indexed_symbol" onclick="parent.postMessage({'referent':'.root.indexer-src.typeshed.stdlib.2and3.builtins.object.decode'}, '*')">decode)將字串用指定方式解碼<br/></a></span><span class="c1">#(</span><span class="s1">utf-8)解碼方式<br/></span><span class="n"><a name="kln-30"></a><a class="indexed_symbol local_indexed_symbol" onclick="parent.postMessage({'referent':'.kaggle.usercode.12220899.44629092.cp1a'}, '*')">cp1b</a></span><span class="o">.</span><span class="n">append</span><span class="p">(</span><span class="nb"><a class="indexed_symbol global_indexed_symbol" onclick="parent.postMessage({'referent':'.root.indexer-src.typeshed.stdlib.2and3.builtins.int'}, '*')">int</a></span><span class="p">(</span><span class="n"><a class="indexed_symbol local_indexed_symbol" onclick="parent.postMessage({'referent':'.kaggle.usercode.12220899.44629092.line'}, '*')">line</a></span><span class="o">.</span><span class="n"><a class="indexed_symbol global_indexed_symbol" onclick="parent.postMessage({'referent':'.root.indexer-src.typeshed.stdlib.2and3.builtins.object.decode'}, '*')">decode</a></span><span class="p">(</span><span class="s1">'utf-8'</span><span class="p">)</span><span class="o">.</span><span class="n"><a class="indexed_symbol global_indexed_symbol" onclick="parent.postMessage({'referent':'.root.indexer-src.typeshed.stdlib.2and3.builtins.object.rstrip'}, '*')">rstrip</a></span><span class="p">()))<br/><br/></span><span class="c1">#輸出(line.decode('utf-8'), end = "") #utf-8或iso8859-1 或任何編碼方式<br/></span><span class="nb"><a name="kln-32"></a><a class="indexed_symbol global_indexed_symbol" onclick="parent.postMessage({'referent':'.root.indexer-src.typeshed.stdlib.2and3.builtins.print'}, '*')">print</a></span><span class="p">(</span><span class="n"><a class="indexed_symbol local_indexed_symbol" onclick="parent.postMessage({'referent':'.kaggle.usercode.12220899.44629092.cp1a'}, '*')">cp1b</a></span><span class="p">) #輸出結果</span></pre>
<pre><span class="p"> </span></pre>
<p style="text-align: left;"><span>執行結果</span></p>
<p style="text-align: left;"><img alt="" height="648" src="/images/123.png" width="1913"/></p>
<h2>HW2-2</h2>
<p>利用亂數分組所產生之結果，可以利用此結果進行還原</p>
<pre class="brush:py;auto-links:false;toolbar:false" contenteditable="false">''' now can we read [[40823148, 40923203, 40923208, 40923209, 40923210, 40923223, 40923225, 40923230, 40923238, 40923239, 40923244, 40923249], [40523148, 40923201, 40923202, 40923218, 40923219, 40923228, 40923231, 40923232, 40923240, 40923247, 40923248, 40923250], [40823152, 40923205, 40923212, 40923214, 40923217, 40923226, 40923236, 40923241, 40923242, 40923246, 40923251], [40723217, 40728238, 40923206, 40923216, 40923220, 40923227, 40923233, 40923237, 40923243, 40923252, 40923253], [40523138, 40923204, 40923207, 40923211, 40923213, 40923221, 40923224, 40923229, 40923234, 40923235, 40923245]] 
into one dimensional list
'''
cp1bGroup = [[40823148, 40923203, 40923208, 40923209, 40923210, 40923223, 40923225, 40923230, 40923238, 40923239, 40923244, 40923249], [40523148, 40923201, 40923202, 40923218, 40923219, 40923228, 40923231, 40923232, 40923240, 40923247, 40923248, 40923250], [40823152, 40923205, 40923212, 40923214, 40923217, 40923226, 40923236, 40923241, 40923242, 40923246, 40923251], [40723217, 40728238, 40923206, 40923216, 40923220, 40923227, 40923233, 40923237, 40923243, 40923252, 40923253], [40523138, 40923204, 40923207, 40923211, 40923213, 40923221, 40923224, 40923229, 40923234, 40923235, 40923245]] 
# len() can be used to get the length of a list
#print(len(cp1bGroup))
# so we can use the for loop to read group member out
groupNum = len(cp1bGroup)
cp1b = []
for i in range(groupNum):
    # use len() to get student number for each group
    studNum = len(cp1bGroup[i])
    #print(cp1bGroup[i])
    for j in range(studNum):
        cp1b.append(cp1bGroup[i][j])
print(cp1b)
# yes, we transfer two dimensional list into one diimension
# for the next step we may need to compare two lists to find the discrepancy</pre>
<pre><br/><br/>執行結果<br/><img alt="" height="648" src="/images/1.png" width="1875"/></pre><h1>HW3</h1>
<p style="text-align: left;">作業3:個人分配範圍</p>
<ul style="text-align: left;">
<li>4:<span> </span><a href="https://www.practicepython.org/exercise/2014/02/26/04-divisors.html">Divisors</a><span> </span></li>
<li><span>32:<span> </span><a href="https://www.practicepython.org/exercise/2017/01/10/32-hangman.html">Hangman</a><span> </span></span></li>
<li><span><span>35:<span> </span><a href="https://www.practicepython.org/exercise/2017/02/28/35-birthday-months.html">Birthday Months</a></span></span><span><span></span></span><span><span></span></span><span><span></span></span></li>
</ul>
<h2>4-Divisors除數</h2>
<p style="text-align: left;">Exercise 4(<span>練習4)</span></p>
<p style="text-align: left;"><span>Create a program that asks the user for a number and then prints out a list of all the divisors of that number. (If you don’t know what a <em>divisor</em><span><span> </span>is, it is a number that divides evenly into another number. For example, 13 is a divisor of 26 because 26 / 13 has no remainder.)</span></span></p>
<p style="text-align: left;"><span><span>創建一個程序，詢問用戶一個數字，然後打印出該數字的所有除數的列表。（如果您不知道</span><em><span><span>除數</span></span></em><span><span>是多少，它是一個平均除以另一個數的數字。例如，13是26的除數，因為26/13沒有餘數。）</span></span></span></p>
<p style="text-align: left;"><span><span><span></span></span></span></p>
<p style="text-align: left;">Discussion<span>(討論區)</span></p>
<p style="text-align: left;">The topics that you need for this exercise combine lists, conditionals, and user input. There is a new concept of creating lists.</p>
<p style="text-align: left;">There is an easy way to programmatically create lists of numbers in Python.</p>
<p style="text-align: left;">To create a list of numbers from 2 to 10, just use the following code:</p>
<p style="text-align: left;"><span><span>本練習需要的主題包括列表，條件和用戶輸入。</span><span>有一個創建列表的新概念。</span></span></p>
<p style="text-align: left;"><span><span>有一種簡便的方法可以在Python中以編程方式創建數字列表。</span></span></p>
<p style="text-align: left;"><span><span>要創建2到10的數字列表，只需使用以下代碼：</span></span></p>
<p style="text-align: left;"><span><span></span></span></p>
<figure class="highlight" style="text-align: left;">
<pre><code class="language-python" data-lang="python">  <span class="n">x</span> <span class="o">=</span> <span class="nb">range</span><span class="p">(</span><span class="mi">2</span><span class="p">,</span> <span class="mi">11</span><span class="p">)<br/></span></code></pre>
</figure>
<p style="text-align: left;"><span><span></span></span></p>
<p style="text-align: left;"><span><span>Then the variable <code class="highlighter-rouge">x</code><span><span> </span>will contain the list<span> </span></span><code class="highlighter-rouge">[2, 3, 4, 5, 6, 7, 8, 9, 10]</code><span>. Note that the second number in the<span> </span></span><code class="highlighter-rouge">range()</code><span><span> </span>function is not included in the original list.</span></span></span></p>
<p style="text-align: left;"><span><span>然後，變量</span></span><code class="highlighter-rouge">x</code><span><span>將包含列表</span></span><code class="highlighter-rouge">[2, 3, 4, 5, 6, 7, 8, 9, 10]</code><span><span>。</span><span>請注意，</span></span><code class="highlighter-rouge">range()</code><span><span>函數</span><span>中的第二個數字</span><span>不包括在原始列表中。</span></span></p>
<p style="text-align: left;"><span><span>Now that <code class="highlighter-rouge">x</code><span><span> </span>is a list of numbers, the same for loop can be used with the list:</span></span></span></p>
<p style="text-align: left;"><span><span>現在這</span></span><code class="highlighter-rouge">x</code><span><span>是一個數字列表，該列表可以使用相同的for循環：</span></span></p>
<figure class="highlight" style="text-align: left;">
<pre><code class="language-python" data-lang="python">  <span class="k">for</span> <span class="n">elem</span> <span class="ow">in</span> <span class="n">x</span><span class="p">:</span> 
    <span class="k">print</span> <span class="n">elem</span></code></pre>
</figure>
<p style="text-align: left;"><span><span>將產生結果：</span></span></p>
<figure class="highlight" style="text-align: left;">
<pre><code class="language-pycon" data-lang="pycon">  2
  3
  4
  5
  6
  7
  8
  9
  10<br/><br/></code></pre>
</figure>
<p style="text-align: left;"><span><span>Divisors Solutions(解決方案)</span></span></p>
<p style="text-align: left;"><span><span>Create a program that asks the user for a number and then prints out a list of all the divisors of that number. (If you don’t know what a <em>divisor</em><span><span> </span>is, it is a number that divides evenly into another number. For example, 13 is a divisor of 26 because 26 / 13 has no remainder.)</span></span></span></p>
<p style="text-align: left;"><span><span><span><span>創建一個程序，詢問用戶一個數字，然後打印出該數字的所有除數的列表。（如果您不知道</span><em><span><span>除數</span></span></em><span><span>是多少，它是一個平均除以另一個數的數字。例如，13是26的除數，因為26/13沒有餘數。）</span></span></span></span></span></p>
<pre class="brush:py;auto-links:false;toolbar:false" contenteditable="false">__author__ = 'jeffreyhunt'

num = int(input("Please choose a number to divide: "))

listRange = list(range(1,num+1))

divisorList = []

for number in listRange:
    if num % number == 0:
        divisorList.append(number)

print(divisorList)</pre>
<pre><br/><br/><br/></pre>
<p style="text-align: left;">There were a number of tricky things with this exercise. First, the type conversions between input strings and integers for the<span> </span><code class="highlighter-rouge">range()</code><span> </span>function need to be carefully output. Second, the arguments to<span> </span><code class="highlighter-rouge">range()</code><span> </span>had to be carefully constructed to cover all the possible numbers. Third, the condition in the<span> </span><code class="highlighter-rouge">if</code><span> </span>statement had to be correct as well.</p>
<p style="text-align: left;"><span>這項練習有很多棘手的事情。首先，</span><code class="highlighter-rouge">range()</code><span><span>需要仔細輸出函數的</span><span>輸入字符串和整數之間的類型轉換</span><span>。</span><span>其次，</span></span><code class="highlighter-rouge">range()</code><span><span>必須仔細構造</span><span>論據以</span><span>涵蓋所有可能的數字。</span><span>第三，</span></span><code class="highlighter-rouge">if</code><span><span>聲明中</span><span>的條件</span><span>也必須正確。</span></span></p>
<p style="text-align: left;"><span><span></span></span></p>
<h2>32-Hangman</h2>
<p style="text-align: left;">Exercise 32<span>(練習32)</span></p>
<p style="text-align: left;"><span></span></p>
<p style="text-align: left;"><em>This exercise is Part 3 of 3 of the Hangman exercise series. The other exercises are:<span> </span><a href="https://www.practicepython.org/exercise/2016/09/24/30-pick-word.html">Part 1</a><span> </span>and<span> </span><a href="https://www.practicepython.org/exercise/2017/01/02/31-guess-letters.html">Part 2</a>.</em></p>
<p style="text-align: left;"><em>You can start your Python journey anywhere, but to finish this exercise you will have to have finished Parts 1 and 2 or use the solutions (<a href="https://www.practicepython.org/solution/2016/10/15/30-pick-word-solutions.html">Part 1</a><span> </span>and<span> </span><a href="https://www.practicepython.org/solution/2017/01/08/31-guess-letters-solutions.html">Part 2</a>).</em></p>
<p style="text-align: left;"><em><span><span>本練習是《 Hangman》練習系列3的第3部分。</span><span>其他練習是：</span></span><a href="https://www.practicepython.org/exercise/2016/09/24/30-pick-word.html"><span><span>第1</span></span></a><span></span><a href="https://www.practicepython.org/exercise/2017/01/02/31-guess-letters.html"><span><span>部分</span></span></a><span><span>和</span><a href="https://www.practicepython.org/exercise/2017/01/02/31-guess-letters.html"><span>第2部分</span></a><span>。</span></span></em></p>
<p style="text-align: left;"><em><span><span>您可以在任何地方開始Python之旅，但是要完成本練習，您將必須完成第1</span></span><a href="https://www.practicepython.org/solution/2016/10/15/30-pick-word-solutions.html"><span><span>部分</span></span></a><span><span>和</span></span><a href="https://www.practicepython.org/solution/2017/01/08/31-guess-letters-solutions.html"><span><span>第2</span></span></a><span><a href="https://www.practicepython.org/solution/2016/10/15/30-pick-word-solutions.html"><span>部分</span></a><span>或使用解決方案（</span><a href="https://www.practicepython.org/solution/2016/10/15/30-pick-word-solutions.html"><span>第1</span></a><a href="https://www.practicepython.org/solution/2017/01/08/31-guess-letters-solutions.html"><span>部分</span></a><span>和</span><a href="https://www.practicepython.org/solution/2017/01/08/31-guess-letters-solutions.html"><span>第2部分</span></a><span>）。</span></span></em></p>
<p style="text-align: left;"><em><span><span></span></span></em></p>
<p style="text-align: left;"><em><span><span>In this exercise, we will finish building Hangman. In the game of Hangman, the player only has 6 incorrect guesses (head, body, 2 legs, and 2 arms) before they lose the game.</span></span></em></p>
<p style="text-align: left;"><span><span>在本練習中，我們將完成“ Hangman”的構建。</span><span>在《 Hangman》遊戲中，玩家在輸掉遊戲前只有6個錯誤的猜測（頭部，身體，2條腿和2條手臂）。</span></span></p>
<p style="text-align: left;"><span><span></span></span></p>
<p style="text-align: left;"><span><span>In Part 1, we loaded a random word list and picked a word from it. In Part 2, we wrote the logic for guessing the letter and displaying that information to the user. In this exercise, we have to put it all together and add logic for handling guesses.</span></span></p>
<p style="text-align: left;"><span><span>在第1部分中，我們加載了一個隨機單詞列表並從中選擇一個單詞。</span><span>在第2部分中，我們編寫了猜測字母並將該信息顯示給用戶的邏輯。</span><span>在本練習中，我們必須將所有內容放在一起並添加邏輯以處理猜測。</span></span></p>
<p style="text-align: left;"><span><span></span></span></p>
<p style="text-align: left;"><span><span>Copy your code from Parts 1 and 2 into a new file as a starting point. Now add the following features:</span></span></p>
<p style="text-align: left;"><span><span>將您的代碼從第1部分和第2部分複製到一個新文件中作為起點。</span><span>現在添加以下功能：</span></span></p>
<ul style="text-align: left;">
<li>Only let the user guess 6 times, and tell the user how many guesses they have left.</li>
<li>Keep track of the letters the user guessed. If the user guesses a letter they already guessed, don’t penalize them - let them guess again.</li>
</ul>
<ul style="text-align: left;">
<li><span><span>僅讓用戶猜測6次，然後告訴用戶他們還剩下多少猜測。</span></span></li>
<li><span><span>跟踪用戶猜測的字母。</span><span>如果用戶猜出了他們已經猜出的字母，請不要對它們進行懲罰-讓他們再猜一次。</span></span></li>
</ul>
<p style="text-align: left;"><span><span>Optional additions可選的補充：</span></span></p>
<ul style="text-align: left;">
<li>When the player wins or loses, let them start a new game.</li>
<li>Rather than telling the user<span> </span><code class="highlighter-rouge">"You have 4 incorrect guesses left"</code>, display some picture art for the Hangman.<span> </span><em>This is challenging - do the other parts of the exercise first!</em></li>
</ul>
<ul style="text-align: left;">
<li><span><span>當玩家贏或輸時，讓他們開始新的遊戲。</span></span></li>
<li><span><span>不要告訴用戶</span></span><code class="highlighter-rouge">"你只剩4次猜錯的機會"</code><span><span>，</span><span>而是</span><span>為Hangman展示一些圖畫。</span></span><em><span><span>這具有挑戰性-首先進行練習的其他部分！</span></span></em><em><span><span></span></span></em><em><span><span></span></span></em></li>
</ul>
<p style="text-align: left;"><span><span>Your solution will be a lot cleaner if you make use of functions to help you!</span></span></p>
<p style="text-align: left;"><span><span>如果您使用功能來幫助您，您的解決方案將變得更加干淨！</span></span></p>
<p style="text-align: left;">Concepts(<span><span>概念)</span></span></p>
<ul style="text-align: left;">
<li>Sets</li>
<li>Code organization</li>
</ul>
<ul style="text-align: left;">
<li><span><span>套裝</span></span></li>
<li><span><span>代碼組織</span></span></li>
</ul>
<p style="text-align: left;">Sets(套裝)</p>
<p style="text-align: left;"><span>We already discussed sets </span><a href="https://www.practicepython.org/exercise/2014/05/15/14-list-remove-duplicates.html">in Exercise 14</a><span>, but here is a brief summary:</span></p>
<p style="text-align: left;"><span><span>我們已經</span></span><a href="https://www.practicepython.org/exercise/2014/05/15/14-list-remove-duplicates.html"><span><span>在練習14中</span></span></a><span><span>討論了集合</span><span>，但這是一個簡短的摘要：</span></span></p>
<ul style="text-align: left;">
<li>Sets, like lists, store a collection of items</li>
<li>The collection of items in a set are unique. There cannot be any repeated elements.</li>
</ul>
<ul style="text-align: left;">
<li><span><span>集合（如列表）存儲項目的集合</span></span></li>
<li><span><span>集合中的項目集合是唯一的。</span><span>不能有任何重複的元素。</span></span><span><span></span></span></li>
</ul>
<p style="text-align: left;"><span><span></span></span></p>
<p style="text-align: left;"><span><span>The only “gotcha” is that you cannot have a set of lists - each element in the set must be <a href="https://docs.python.org/3.6/glossary.html#term-hashable">hashable</a><span>. Basically this means you can’t have elements that can change in a set, so the objects in your set should be integers or strings. The reason and distinction are not super important; the most important thing to know is that sets are most useful when you want a set of integers or strings, rather than a set of lists.</span></span></span></p>
<p style="text-align: left;"><span><span>唯一的“陷阱”是您不能擁有一組列表-列表中的每個元素都必須是可</span></span><a href="https://docs.python.org/3.6/glossary.html#term-hashable"><span><span>哈希的</span></span></a><span><span>。</span><span>基本上，這意味著您不能在集合中更改任何元素，因此集合中的對象應為整數或字符串。</span><span>原因和區別並不重要。</span><span>要知道的最重要的一點是，當您需要一組整數或字符串而不是一組列表時，集合最有用。</span></span></p>
<p style="text-align: left;"><span><span>In Python </span></span></p>
<p style="text-align: left;"><span><span>在Python中：</span></span></p>
<figure class="highlight" style="text-align: left;">
<pre class="brush:py;auto-links:false;toolbar:false" contenteditable="false">&gt;&gt;&gt; my_list = [1, 1, 2, 2, 3, 3, 5, 5, 8]
&gt;&gt;&gt; print(my_list)
[1, 1, 2, 2, 3, 3, 5, 5, 8]
&gt;&gt;&gt; my_set = {1, 1, 2, 2, 3, 3, 5, 5, 8}
&gt;&gt;&gt; print(my_set)
{1, 2, 3, 5, 8}</pre>
<pre><code class="language-python" data-lang="python"><span class="p"><br/><br/></span></code></pre>
</figure>
<p style="text-align: left;"><span><span>To add elements to a set, use the <code class="highlighter-rouge">.add()</code><span><span> </span>method:</span></span></span></p>
<p style="text-align: left;"><span><span>要將元素添加到集合中，請使用</span></span><code class="highlighter-rouge">.add()</code><span><span>方法：</span></span></p>
<figure class="highlight" style="text-align: left;">
<pre class="brush:py;auto-links:false;toolbar:false" contenteditable="false">&gt;&gt;&gt; my_set = set()  # makes an empty set
&gt;&gt;&gt; my_set.add(5)  # adds the number 5
&gt;&gt;&gt; print(my_set)
{5}
&gt;&gt;&gt; my_set.add("Michele")
&gt;&gt;&gt; print(my_set)
{5, "Michele"}
&gt;&gt;&gt; my_set.add(5)
&gt;&gt;&gt; print(my_set)
{5, "Michele"}</pre>
<pre><br/><br/></pre>
</figure>
<p style="text-align: left;"><span><span>The advantage of sets is that all the elements in it are unique. This makes it very easy to check whether an element is already in the set. All you need to do is ask <code class="highlighter-rouge">elem in my_set</code><span>:</span></span></span></p>
<p style="text-align: left;"><span><span>集的優點是其中的所有元素都是唯一的。</span><span>這使得檢查元素是否已經在集合中變得非常容易。</span><span>您需要做的只是問</span></span><code class="highlighter-rouge">elem in my_set</code><span><span>：</span></span></p>
<figure class="highlight" style="text-align: left;">
<pre class="brush:py;auto-links:false;toolbar:false" contenteditable="false">&gt;&gt;&gt; my_set = {1, 2, 3, 5}
&gt;&gt;&gt; 1 in my_set
True
&gt;&gt;&gt; 4 in my_set
False</pre>
<pre><br/><br/></pre>
</figure>
<p style="text-align: left;"><span><span>And this check is very fast - much faster than doing the same <code class="highlighter-rouge">in</code><span><span> </span>check with a list.</span></span></span></p>
<p style="text-align: left;"><span><span>而且此檢查非常快-比</span></span><code class="highlighter-rouge">in</code><span><span>使用列表</span><span>進行相同</span><span>檢查</span><span>要快得多</span><span>。</span></span></p>
<p style="text-align: left;"><span><span></span></span></p>
<p style="text-align: left;"><span>Hangman Solutions (Hangman解決方案)</span></p>
<p style="text-align: left;"><span></span></p>
<p style="text-align: left;"><em><span>本練習是《 Hangman》練習系列3的第3部分。其他練習是：</span><a href="https://www.practicepython.org/exercise/2016/09/24/30-pick-word.html"><span>第1</span></a><span></span><a href="https://www.practicepython.org/exercise/2017/01/02/31-guess-letters.html"><span>部分</span></a><span>和<a href="https://www.practicepython.org/exercise/2017/01/02/31-guess-letters.html">第2部分</a>。</span></em></p>
<p style="text-align: left;"><em><span><span>您可以在任何地方開始Python之旅，但是要完成本練習，您必須完成第1部分和第2部分。</span></span></em></p>
<p style="text-align: left;"><span><span>在本練習中，我們將完成“ Hangman”的構建。</span><span>在《 Hangman》遊戲中，玩家在輸掉遊戲前只有6個錯誤的猜測（頭部，身體，2條腿和2條手臂）。</span></span></p>
<p style="text-align: left;"><span><span>在第1部分中，我們加載了一個隨機單詞列表並從中選擇一個單詞。</span><span>在第2部分中，我們編寫了猜測字母並將該信息顯示給用戶的邏輯。</span><span>在本練習中，我們必須將所有內容放在一起並添加邏輯以處理猜測。</span></span></p>
<p style="text-align: left;"><span><span>將您的代碼從第1部分和第2部分複製到一個新文件中作為起點。</span><span>現在添加以下功能：</span></span></p>
<p style="text-align: left;"><span><span></span></span></p>
<p style="text-align: left;"><em>This exercise is Part 3 of 3 of the Hangman exercise series. The other exercises are:<span> </span><a href="https://www.practicepython.org/exercise/2016/09/24/30-pick-word.html">Part 1</a><span> </span>and<span> </span><a href="https://www.practicepython.org/exercise/2017/01/02/31-guess-letters.html">Part 2</a>.</em></p>
<p style="text-align: left;"><em>You can start your Python journey anywhere, but to finish this exercise you will have to have finished Parts 1 and 2.</em></p>
<p style="text-align: left;">In this exercise, we will finish building Hangman. In the game of Hangman, the player only has 6 incorrect guesses (head, body, 2 legs, and 2 arms) before they lose the game.</p>
<p style="text-align: left;">In Part 1, we loaded a random word list and picked a word from it. In Part 2, we wrote the logic for guessing the letter and displaying that information to the user. In this exercise, we have to put it all together and add logic for handling guesses.</p>
<p style="text-align: left;">Copy your code from Parts 1 and 2 into a new file as a starting point. Now add the following features:</p>
<p style="text-align: left;"></p>
<ul style="text-align: left;">
<li><span>僅讓用戶猜測6次，然後告訴用戶他們還剩下多少猜測。</span></li>
<li><span>跟踪用戶猜測的字母。如果用戶猜出了他們已經猜出的字母，請不要對它們進行懲罰-讓他們再猜一次。</span></li>
</ul>
<ul style="text-align: left;">
<li>Only let the user guess 6 times, and tell the user how many guesses they have left.</li>
<li>Keep track of the letters the user guessed. If the user guesses a letter they already guessed, don’t penalize them - let them guess again.</li>
</ul>
<p style="text-align: left;"></p>
<p style="text-align: left;"><span>可選的補充 </span>Optional additions:</p>
<ul style="text-align: left;">
<li><span>當玩家贏或輸時，讓他們開始新的遊戲。</span></li>
<li><span>不要告訴用戶</span><code class="highlighter-rouge">"<span>你只剩4次猜錯的機會</span>"</code><span>，而是為Hangman展示一些圖畫。</span><em><span>這具有挑戰性-首先進行練習的其他部分！</span></em></li>
</ul>
<ul style="text-align: left;">
<li>When the player wins or loses, let them start a new game.</li>
<li>Rather than telling the user<span> </span><code class="highlighter-rouge">"You have 4 incorrect guesses left"</code>, display some picture art for the Hangman.<span> </span><em>This is challenging - do the other parts of the exercise first!</em></li>
</ul>
<p style="text-align: left;"><span>如果您使用功能來幫助您，您的解決方案將變得更加干淨！</span></p>
<p style="text-align: left;">Your solution will be a lot cleaner if you make use of functions to help you!</p>
<p style="text-align: left;"></p>
<p style="text-align: left;">Sample Solution 示範解答</p>
<p style="text-align: left;">Here is a sample solution from a reader that uses the solutions to Parts 1 and 2, and just puts them on one file:</p>
<p style="text-align: left;"><span>這是來自讀者的示例解決方案，使用了第1部分和第2部分的解決方案，並將它們放在一個文件中：</span></p>
<pre class="brush:py;auto-links:false;toolbar:false" contenteditable="false">import random

def choose_random_word():
    words=[]
    with open('sowpods.txt', 'r') as file:
        line = file.readline()
        while line:
            words.append(line.replace("\n","".strip()))
            line = file.readline()
    choice=words[random.randint(0,len(words)-1)]
    return choice

print("Welcome to Hangman!")
secret_word=choose_random_word()
dashes=list(secret_word)
display_list=[]
for i in dashes:
    display_list.append("_")
count=len(secret_word)
guesses=0
letter = 0
used_list=[]
while count != 0 and letter != "exit":
    print(" ".join(display_list))
    letter=input("Guess your letter: ")

    if letter.upper() in used_list:
        print("Oops! Already guessed that letter.")
    else:
        for i in range(0,len(secret_word)):
            if letter.upper() == secret_word[i]:
                display_list[i]=letter.upper()
                count -= 1
        guesses +=1
    used_list.append(letter.upper())

if letter == "exit":
    print("Thanks!")
else:
    print(" ".join(display_list))
    print("Good job! You figured that the word is "+secret_word+" after guessing %s letters!" % guesses)
</pre>
<pre><br/><br/></pre>
<pre></pre>
<p style="text-align: left;"><br/><br/><br/></p><h2>35-Birthday Months 生日月份</h2>
<div style="text-align: left;">Exercise 35 (練習35)<br/><i></i></div>
<p style="text-align: left;"><em><span>此練習是生日數據練習系列4的第3部分。其他練習是：</span><a href="https://www.practicepython.org/exercise/2017/01/24/33-birthday-dictionaries.html"><span>第1部分</span></a><span>，</span><a href="https://www.practicepython.org/exercise/2017/02/06/34-birthday-json.html"><span>第2</span></a><span></span><a href="https://www.practicepython.org/exercise/2017/04/02/36-birthday-plots.html"><span>部分</span></a><span>和<a href="https://www.practicepython.org/exercise/2017/04/02/36-birthday-plots.html">第4部分</a>。</span></em></p>
<p style="text-align: left;"><span><span>在上</span></span><a href="https://www.practicepython.org/exercise/2017/02/06/34-birthday-json.html"><span><span>一個練習中，</span></span></a><span><span>我們將有關著名科學家的姓名和生日的信息保存到磁盤上。</span><span>在本練習中，從磁盤加載該JSON文件，提取所有生日的月份，併計算每個月有多少科學家生日。</span></span></p>
<p style="text-align: left;"><span><span>您的程序應輸出如下內容：</span></span></p>
<p style="text-align: left;"><em>This exercise is Part 3 of 4 of the birthday data exercise series. The other exercises are:<span> </span><a href="https://www.practicepython.org/exercise/2017/01/24/33-birthday-dictionaries.html">Part 1</a>,<span> </span><a href="https://www.practicepython.org/exercise/2017/02/06/34-birthday-json.html">Part 2</a>, and<span> </span><a href="https://www.practicepython.org/exercise/2017/04/02/36-birthday-plots.html">Part 4</a>.</em></p>
<p style="text-align: left;">In the<span> </span><a href="https://www.practicepython.org/exercise/2017/02/06/34-birthday-json.html">previous exercise</a><span> </span>we saved information about famous scientists’ names and birthdays to disk. In this exercise, load that JSON file from disk, extract the months of all the birthdays, and count how many scientists have a birthday in each month.</p>
<p style="text-align: left;">Your program should output something like:</p>
<figure class="highlight" style="text-align: left;">
<pre class="brush:py;auto-links:false;toolbar:false" contenteditable="false">{
	"May": 3,
	"November": 2,
	"December": 1
}</pre>
<pre><code class="language-python" data-lang="python"><span class="p"><br/><br/><br/><br/></span></code></pre>
</figure>
<p style="text-align: left;">Discussion(討論區)</p>
<p style="text-align: left;"><span>您已經具有使用我們已經介紹的概念完成此練習的技能：</span><a href="https://www.practicepython.org/exercise/2014/02/15/03-list-less-than-ten.html"><span>for循環</span></a><span>，</span><a href="https://www.practicepython.org/exercise/2014/12/06/22-read-from-file.html"><span>字典</span></a><span>和基本算術。但是，我想談談稱為的Python內置函數</span><code class="highlighter-rouge">Counter</code><span>。</span></p>
<p style="text-align: left;"><code class="highlighter-rouge"><span face="Verdana, Arial, Helvetica, sans-serif" style="font-family: Verdana, Arial, Helvetica, sans-serif;">從</span><a href="https://docs.python.org/3/library/collections.html#collections.Counter">Counter</a></code><span><span>獲取一個列表，併計算列表中每個元素的數量。</span><span>要使用計數器，請先從中導入</span></span><code class="highlighter-rouge">collections</code><span><span>：</span></span></p>
<p style="text-align: left;"><span><span></span></span></p>
<figure class="highlight" style="text-align: left;"></figure>
<p style="text-align: left;"><span><span></span></span></p>
<p style="text-align: left;">You already have the skills to achieve this exercise with concepts we’ve already covered:<span> </span><a href="https://www.practicepython.org/exercise/2014/02/15/03-list-less-than-ten.html">for loops</a>,<span> </span><a href="https://www.practicepython.org/exercise/2014/12/06/22-read-from-file.html">dictionaries</a>, and basic arithmetic. However, I want to talk about a Python built-in called a<span> </span><code class="highlighter-rouge">Counter</code>.</p>
<p style="text-align: left;">A<span> </span><a href="https://docs.python.org/3/library/collections.html#collections.Counter"><code class="highlighter-rouge">Counter</code></a><span> </span>takes a list and counts how many of each element were in the list. To use the Counter, first import it from<span> </span><code class="highlighter-rouge">collections</code>:</p>
<p style="text-align: left;"></p>
<figure class="highlight" style="text-align: left;">
<pre class="brush:py;auto-links:false;toolbar:false" contenteditable="false">from collections import Counter</pre>
<pre><code class="language-python" data-lang="python"><span class="n"><br/><br/><br/></span></code></pre>
</figure>
<p style="text-align: left;"><span>這使您可以</span><code class="highlighter-rouge">Counter</code><span>在程序中使用Python內置的數據結構。然後，給它一個清單：</span></p>
<p style="text-align: left;">This lets you use the<span> </span><code class="highlighter-rouge">Counter</code><span> </span>data structure built into Python in your program. Then, give it a list:</p>
<p style="text-align: left;"></p>
<figure class="highlight" style="text-align: left;">
<pre class="brush:py;auto-links:false;toolbar:false" contenteditable="false">sandwiches = ["ham", "cheese", "roast beef", "ham", "cheese", "roast beef", "ham"]
c = Counter(sandwiches)
</pre>
<pre><code class="language-python" data-lang="python"><span class="p"><br/><br/></span></code></pre>
</figure>
<p style="text-align: left;"><span>如果是</span><code class="highlighter-rouge">print(c)</code><span><span>，您將看到以下內容：</span></span></p>
<p style="text-align: left;">If you<span> </span><code class="highlighter-rouge">print(c)</code>, you will see this:</p>
<p style="text-align: left;"></p>
<figure class="highlight" style="text-align: left;">
<pre class="brush:py;auto-links:false;toolbar:false" contenteditable="false">Counter({"ham": 3, "roast beef": 2, "cheese": 2})</pre>
<pre><br/><br/></pre>
</figure>
<p style="text-align: left;"><span></span></p>
<p style="text-align: left;"><span>這意味著我的列表中有3個</span><code class="highlighter-rouge">ham</code><span><span>，2個</span></span><code class="highlighter-rouge">roast beef</code><span><span>和2個</span></span><code class="highlighter-rouge">cheese</code><span><span>三明治。</span><span>我可以直接從中獲取此信息</span></span><code class="highlighter-rouge">Counter</code><span><span>：</span></span></p>
<p style="text-align: left;">This means there are 3<span> </span><code class="highlighter-rouge">ham</code>, 2<span> </span><code class="highlighter-rouge">roast beef</code>, and 2<span> </span><code class="highlighter-rouge">cheese</code><span> </span>sandwiches in my list. I can get this information directly from the<span> </span><code class="highlighter-rouge">Counter</code>:</p>
<p style="text-align: left;"></p>
<figure class="highlight" style="text-align: left;">
<pre class="brush:py;auto-links:false;toolbar:false" contenteditable="false">&gt;&gt;&gt; print("There are {} ham sandwiches".format(c["ham"]))
There are 3 ham sandwiches</pre>
<pre><code class="language-python" data-lang="python"><span class="n"><br/><br/></span></code></pre>
</figure>
<p style="text-align: left;"><span></span></p>
<p style="text-align: left;"><span>希望這是有用的！</span></p>
<p style="text-align: left;">Hope this is useful!</p>
<p style="text-align: left;"></p>
<p style="text-align: left;"><span>Birthday Months Solutions 生日月份解決方案</span></p>
<p style="text-align: left;"><span></span></p>
<p style="text-align: left;"><span><em>This exercise is Part 3 of 4 of the birthday data exercise series. The other exercises are: <a href="https://www.practicepython.org/exercise/2017/01/24/33-birthday-dictionaries.html">Part 1</a>, <a href="https://www.practicepython.org/exercise/2017/02/06/34-birthday-json.html">Part 2</a>, and <a href="https://www.practicepython.org/exercise/2017/04/02/36-birthday-plots.html">Part 4</a>.</em></span></p>
<p style="text-align: left;"><em><span>此練習是生日數據練習系列4的第3部分。其他練習是：</span><a href="https://www.practicepython.org/exercise/2017/01/24/33-birthday-dictionaries.html"><span>第1部分</span></a><span>，</span><a href="https://www.practicepython.org/exercise/2017/02/06/34-birthday-json.html"><span>第2</span></a><span></span><a href="https://www.practicepython.org/exercise/2017/04/02/36-birthday-plots.html"><span>部分</span></a><span>和<a href="https://www.practicepython.org/exercise/2017/04/02/36-birthday-plots.html">第4部分</a>。</span></em></p>
<p style="text-align: left;"><em><span></span></em></p>
<p style="text-align: left;"><em><span>In the <a href="https://www.practicepython.org/exercise/2017/02/06/34-birthday-json.html">previous exercise</a><span><span> </span>we saved information about famous scientists’ names and birthdays to disk. In this exercise, load that JSON file from disk, extract the months of all the birthdays, and count how many scientists have a birthday in each month.</span></span></em></p>
<p style="text-align: left;"><span><span>在上</span></span><a href="https://www.practicepython.org/exercise/2017/02/06/34-birthday-json.html"><span><span>一個練習中，</span></span></a><span><span>我們將有關著名科學家的姓名和生日的信息保存到磁盤上。</span><span>在本練習中，從磁盤加載該JSON文件，提取所有生日的月份，併計算每個月有多少科學家生日。</span></span></p>
<p style="text-align: left;"><span><span></span></span></p>
<p style="text-align: left;"><span><span>Your program should output something like:</span></span></p>
<p style="text-align: left;"><span><span>您的程序應輸出如下內容：</span></span></p>
<figure class="highlight" style="text-align: left;">
<pre class="brush:py;auto-links:false;toolbar:false" contenteditable="false">{
	"May": 3,
	"November": 2,
	"December": 1
}</pre>
<pre><br/><br/></pre>
</figure>
<p style="text-align: left;">Solution <span><span>解決方案</span></span></p>
<p style="text-align: left;"><span><span>Here is one reader solution using built-in Counters. This reader’s solution did not specify what kind of format the months have to be in, but as you can see from their use of <code class="highlighter-rouge">x.split()[0]</code><span><span> </span>to extract the months that they expect the month format to be of the type “May 5, 2010”.</span></span></span></p>
<p style="text-align: left;"><span><span>這是一個使用內置計數器的讀者解決方案。</span><span>該讀者的解決方案未指定月份必須採用哪種格式，但是從他們的使用中可以看出，他們</span></span><code class="highlighter-rouge">x.split()[0]</code><span><span>提取月份時希望他們的月份格式為“ 2010年5月5日”。</span></span></p>
<pre class="brush:py;auto-links:false;toolbar:false" contenteditable="false">import json
from collections import Counter

month = []

with open("info.json", "r") as f:
    birthdays = json.load(f)

for x in birthdays.values():
    month.append(x.split()[0])

print(Counter(month))</pre>
<pre><br/><br/></pre><h1>作業進度</h1>
<p style="text-align: left;">Week              進度目標                           完成進度                </p>
<p style="text-align: left;"> W1          建立Github倉儲                         已完成</p>
<p style="text-align: left;"> W2          建立網頁                                    <span>已完成</span></p>
<p style="text-align: left;"> W3          與組員分配討論HW1內容        <span>   </span><span>已完成</span></p>
<p style="text-align: left;"> W4          建立PC Hardware帳號               <span>已完成</span></p>
<p style="text-align: left;"> W5          將<span>PC Hardware PCH10              已完成</span></p>
<p style="text-align: left;"><span> W6           ,PCH11資料完成英翻中             </span><span> 已完成</span></p>
<p style="text-align: left;">                放至個人網頁                           </p>
<p style="text-align: left;"><span> W7           完成作業心得                            </span><span>已完成</span></p>
<p style="text-align: left;"></p>
<p style="text-align: left;">未來規劃</p>
<p style="text-align: left;"></p>
<h1>About</h1>
<p style="text-align: left;">此內容管理系統以 <a href="https://github.com/mdecourse/cmsimde">https://github.com/mdecourse/cmsimde</a> 作為 submodule 運作, 可以選定對應的版本運作, cmsimde 可以持續改版, 不會影響之前設為 submodule, 使用舊版 cmsimde 模組的內容管理相關運作.</p>
<h4 style="text-align: left;">利用 cmsimde 建立靜態網誌方法:</h4>
<p style="text-align: left;">1. 在 github 建立倉儲, git clone 到近端</p>
<p style="text-align: left;">2. 參考 <a href="https://github.com/mdecourse/newcms">https://github.com/mdecourse/newcms</a>, 加入除了 cmsimde 目錄外的所有內容</p>
<p style="text-align: left;">以 git submodule add <a href="https://github.com/mdecourse/cmsimde">https://github.com/mdecourse/cmsimde</a> cmsimde</p>
<p style="text-align: left;">建立 cmsimde 目錄, 並從 github 取下子模組內容.</p>
<p style="text-align: left;">3.在近端維護時, 更換目錄到倉儲中的 cmsimde, 以 python wsgi.py 啟動近端網際伺服器.</p>
<p style="text-align: left;">動態內容編輯完成後, 以 generate_pages 轉為靜態內容, 以 git add commit 及 push 將內容推到遠端.</p>
<p style="text-align: left;">4. 之後若要以 git clone 取下包含 submodule 的所有內容, 執行:</p>
<p style="text-align: left;">git clone --recurse-submodules<span> </span><a href="https://github.com/mdecourse/newcms.git">https://github.com/mdecourse/newcms.git</a></p>
Develop
<p style="text-align: left;"><a href="https://github.com/mdecourse/cmsimde">https://github.com/mdecourse/cmsimde</a> 的開發, 可以在一個目錄中放入 cmsimde, 然後將 up_dir 中的內容放到與 cmsimde 目錄同位階的地方, 使用 command 進入 cmsimde 目錄, 執行 python wsgi.py, 就可以啟動, 以瀏覽器 https://localhost:9443 就可以連接, 以 admin 作為管理者密碼, 就可以登入維護內容.</p>
<p style="text-align: left;">cmsimde 的開發採用 Leo Editor, 開啟 cmsimde 目錄中的 cmsimde.leo 就可以進行程式修改, 結束後, 若要保留網際內容, 只要將 cmsimde 外部的內容倒回 up_dir 目錄中即可後續對 cmsimde 遠端倉儲進行改版.</p>
<p style="text-align: left;">init.py 位於  up_dir 目錄, 可以設定 site_title 與 uwsgi 等變數.</p>
</div>
</div>